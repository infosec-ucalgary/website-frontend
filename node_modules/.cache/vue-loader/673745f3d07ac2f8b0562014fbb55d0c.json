{"remainingRequest":"/home/joshua/Dev/Web/VueTestWeb/infosec-uofc/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/joshua/Dev/Web/VueTestWeb/infosec-uofc/node_modules/vue-functional-calendar/src/components/FunctionalCalendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/joshua/Dev/Web/VueTestWeb/infosec-uofc/node_modules/vue-functional-calendar/src/components/FunctionalCalendar.vue","mtime":499162500000},{"path":"/home/joshua/Dev/Web/VueTestWeb/infosec-uofc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/joshua/Dev/Web/VueTestWeb/infosec-uofc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBoZWxwQ2FsZW5kYXIgZnJvbSAnLi4vYXNzZXRzL2pzL2NhbGVuZGFyJwppbXBvcnQge3Byb3BzQW5kRGF0YX0gZnJvbSAiLi4vbWl4aW5zL3Byb3BzQW5kRGF0YSI7CmltcG9ydCBUaW1lUGlja2VyIGZyb20gIi4vVGltZVBpY2tlciI7CmltcG9ydCBNb250aFllYXJQaWNrZXIgZnJvbSAiLi9Nb250aFllYXJQaWNrZXIiOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIkZ1bmN0aW9uYWxDYWxlbmRhciIsCiAgICBjb21wb25lbnRzOiB7TW9udGhZZWFyUGlja2VyLCBUaW1lUGlja2VyfSwKICAgIG1peGluczogW3Byb3BzQW5kRGF0YV0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuc2V0Q29uZmlncygpOwogICAgICAgIHRoaXMuaW5pdENhbGVuZGFyKCk7CgogICAgICAgIGlmICh0aGlzLmZDb25maWdzLmlzTW9kYWwgJiYgIXRoaXMuZkNvbmZpZ3Mud2l0aFRpbWVQaWNrZXIpIHsKICAgICAgICAgICAgLy8gRXZlbnQKICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHsKICAgICAgICAgICAgICAgIGlmICghdGhpcy4kZWwuY29udGFpbnMoZS50YXJnZXQpKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Q2FsZW5kYXIgPSBmYWxzZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9CgoKICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4gewogICAgICAgICAgICBpZiAodGhpcy5zaG93TW9udGhQaWNrZXIgfHwgdGhpcy5zaG93WWVhclBpY2tlcikgewogICAgICAgICAgICAgICAgbGV0IGtleSA9IHRoaXMuc2hvd01vbnRoUGlja2VyID8gdGhpcy5zaG93TW9udGhQaWNrZXIgLSAxIDogdGhpcy5zaG93WWVhclBpY2tlciAtIDE7CgogICAgICAgICAgICAgICAgbGV0IGVsZW1lbnQxID0gdGhpcy4kcmVmcy5jYWxlbmRhcnMucXVlcnlTZWxlY3RvcihgLnZmYy1jYWxlbmRhcnMgLnZmYy1jYWxlbmRhcjpudGgtY2hpbGQoJHtrZXkgKyAxfSkgLnZmYy10b3AtZGF0ZSBhOm50aC1jaGlsZCgxKWApOwogICAgICAgICAgICAgICAgbGV0IGVsZW1lbnQyID0gdGhpcy4kcmVmcy5jYWxlbmRhcnMucXVlcnlTZWxlY3RvcihgLnZmYy1jYWxlbmRhcnMgLnZmYy1jYWxlbmRhcjpudGgtY2hpbGQoJHtrZXkgKyAxfSkgLnZmYy10b3AtZGF0ZSBhOm50aC1jaGlsZCgyKWApOwoKICAgICAgICAgICAgICAgIGlmICghdGhpcy4kcmVmcy5tb250aENvbnRhaW5lcltrZXldLiRlbC5jb250YWlucyhlLnRhcmdldCkgJiYgIWVsZW1lbnQxLmNvbnRhaW5zKGUudGFyZ2V0KSAmJiAhZWxlbWVudDIuY29udGFpbnMoZS50YXJnZXQpKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93TW9udGhQaWNrZXIgPSB0aGlzLnNob3dZZWFyUGlja2VyID0gZmFsc2UKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0pOwoKICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIC8vIFJlYWN0cyB0byBleHRlcm5hbCBzZWxlY3RlZCBkYXRlcwogICAgICAgIHRoaXMuJHdhdGNoKCd2YWx1ZScsIGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgICBpZiAodGhpcy5mQ29uZmlncy5pc0RhdGVSYW5nZSkgewogICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5kYXRlUmFuZ2Uuc3RhcnQuZGF0ZSA9IHZhbHVlLmRhdGVSYW5nZS5zdGFydC5kYXRlIHx8IGZhbHNlOwogICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5kYXRlUmFuZ2UuZW5kLmRhdGUgPSB2YWx1ZS5kYXRlUmFuZ2UuZW5kLmRhdGUgfHwgZmFsc2UKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuc2VsZWN0ZWREYXRlID0gdmFsdWUuc2VsZWN0ZWREYXRlIHx8IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICB9LCB7ZGVlcDogdHJ1ZX0pOwoKICAgICAgICB0aGlzLiR3YXRjaCgnc2hvd0NhbGVuZGFyJywgZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgICAgIGlmICh2YWx1ZSkKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ29wZW5lZCcpOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdjbG9zZWQnKTsKICAgICAgICB9LCB7aW1tZWRpYXRlOiB0cnVlLCBkZWVwOiB0cnVlfSk7CgogICAgICAgIHRoaXMuc2V0Q2FsZW5kYXJTdHlsZXMoKTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIHllYXJMaXN0KCkgewogICAgICAgICAgICBsZXQgeWVhcnMgPSBbXTsKICAgICAgICAgICAgbGV0IHllYXIgPSB0aGlzLmNhbGVuZGFyLmN1cnJlbnREYXRlLmdldEZ1bGxZZWFyKCkgLSA0OwogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEyOyBpKyspIHsKICAgICAgICAgICAgICAgIGxldCBmaW5hbFllYXIgPSB5ZWFyICsgaTsKCiAgICAgICAgICAgICAgICB5ZWFycy5wdXNoKHsKICAgICAgICAgICAgICAgICAgICB5ZWFyOiBmaW5hbFllYXIKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB5ZWFyczsKICAgICAgICB9CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICAnY2FsZW5kYXIuc2VsZWN0ZWREYXRlJzogewogICAgICAgICAgICBoYW5kbGVyKHZhbCkgewogICAgICAgICAgICAgICAgdGhpcy5pbnB1dC5zZWxlY3RlZERhdGUgPSB2YWwgfHwgJyc7CiAgICAgICAgICAgICAgICB0aGlzLm1hcmtDaG9vc2VEYXlzKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICdjYWxlbmRhci5jdXJyZW50RGF0ZSc6IHsKICAgICAgICAgICAgaGFuZGxlcih2YWx1ZSkgewogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLmNhbGVuZGFyKTsKICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tMaW1pdHModmFsdWUpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAnY2FsZW5kYXIuZGF0ZVJhbmdlLnN0YXJ0LmRhdGUnOiB7CiAgICAgICAgICAgIGhhbmRsZXIodmFsKSB7CiAgICAgICAgICAgICAgICB0aGlzLmlucHV0LmRhdGVSYW5nZS5zdGFydC5kYXRlID0gdmFsIHx8ICcnOwogICAgICAgICAgICAgICAgdGhpcy5tYXJrQ2hvb3NlRGF5cygpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAnY2FsZW5kYXIuZGF0ZVJhbmdlLmVuZC5kYXRlJzogewogICAgICAgICAgICBoYW5kbGVyKHZhbCkgewogICAgICAgICAgICAgICAgdGhpcy5pbnB1dC5kYXRlUmFuZ2UuZW5kLmRhdGUgPSB2YWwgfHwgJyc7CiAgICAgICAgICAgICAgICB0aGlzLm1hcmtDaG9vc2VEYXlzKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICdpbnB1dC5zZWxlY3RlZERhdGUnOiB7CiAgICAgICAgICAgIGhhbmRsZXIodmFsKSB7CiAgICAgICAgICAgICAgICB0aGlzLmlucHV0LnNlbGVjdGVkRGF0ZSA9IHZhbCA9IGhlbHBDYWxlbmRhci5tYXNrKHZhbCk7CiAgICAgICAgICAgICAgICBpZiAoaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KHZhbCkuZ2V0TW9udGgoKSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuc2VsZWN0ZWREYXRlID0gdmFsOwogICAgICAgICAgICAgICAgICAgIHRoaXMubWFya0Nob29zZURheXMoKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBUeXBlYWJsZQogICAgICAgICAgICAgICAgaWYgKGhlbHBDYWxlbmRhci5jaGVja1ZhbGlkRGF0ZSh2YWwpICYmIHRoaXMuZkNvbmZpZ3MuaXNUeXBlYWJsZSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hvb3NlRGF0ZSh2YWwpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAnaW5wdXQuZGF0ZVJhbmdlLnN0YXJ0LmRhdGUnOiB7CiAgICAgICAgICAgIGhhbmRsZXIodmFsKSB7CiAgICAgICAgICAgICAgICB0aGlzLmlucHV0LmRhdGVSYW5nZS5zdGFydC5kYXRlID0gdmFsID0gaGVscENhbGVuZGFyLm1hc2sodmFsKTsKICAgICAgICAgICAgICAgIGlmIChoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQodmFsKS5nZXRNb250aCgpKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5kYXRlUmFuZ2Uuc3RhcnQuZGF0ZSA9IHZhbDsKICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcmtDaG9vc2VEYXlzKCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy8gVHlwZWFibGUKICAgICAgICAgICAgICAgIGlmIChoZWxwQ2FsZW5kYXIuY2hlY2tWYWxpZERhdGUodmFsKSAmJiB0aGlzLmZDb25maWdzLmlzVHlwZWFibGUpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLkNob29zZURhdGUodmFsKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgJ2lucHV0LmRhdGVSYW5nZS5lbmQuZGF0ZSc6IHsKICAgICAgICAgICAgaGFuZGxlcih2YWwpIHsKICAgICAgICAgICAgICAgIHRoaXMuaW5wdXQuZGF0ZVJhbmdlLmVuZC5kYXRlID0gdmFsID0gaGVscENhbGVuZGFyLm1hc2sodmFsKTsKICAgICAgICAgICAgICAgIGlmIChoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQodmFsKS5nZXRNb250aCgpKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5kYXRlUmFuZ2UuZW5kLmRhdGUgPSB2YWw7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXJrQ2hvb3NlRGF5cygpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vIFR5cGVhYmxlCiAgICAgICAgICAgICAgICBpZiAoaGVscENhbGVuZGFyLmNoZWNrVmFsaWREYXRlKHZhbCkgJiYgdGhpcy5mQ29uZmlncy5pc1R5cGVhYmxlKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5DaG9vc2VEYXRlKHZhbCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zZXRDYWxlbmRhclN0eWxlcykKICAgIH0sCiAgICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuc2V0Q2FsZW5kYXJTdHlsZXMpCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGluaXRDYWxlbmRhcigpIHsKICAgICAgICAgICAgLy8gU2V0IEhlbHAgQ2FsZW5kYXIgQ29uZmlncwogICAgICAgICAgICBoZWxwQ2FsZW5kYXIuY29uZmlncy5zdW5kYXlTdGFydCA9IHRoaXMuZkNvbmZpZ3Muc3VuZGF5U3RhcnQ7CiAgICAgICAgICAgIGhlbHBDYWxlbmRhci5jb25maWdzLmxlZnRBbmRSaWdodERheXMgPSB0aGlzLmNoZWNrSGlkZGVuRWxlbWVudCgnbGVmdEFuZFJpZ2h0RGF5cycpOwogICAgICAgICAgICBoZWxwQ2FsZW5kYXIuY29uZmlncy5kYXRlRm9ybWF0ID0gdGhpcy5mQ29uZmlncy5kYXRlRm9ybWF0OwogICAgICAgICAgICBoZWxwQ2FsZW5kYXIuY29uZmlncy5kYXlOYW1lcyA9IHRoaXMuZkNvbmZpZ3MuZGF5TmFtZXM7CiAgICAgICAgICAgIGhlbHBDYWxlbmRhci5jb25maWdzLm1vbnRoTmFtZXMgPSB0aGlzLmZDb25maWdzLm1vbnRoTmFtZXM7CgogICAgICAgICAgICB0aGlzLnNldENhbGVuZGFyRGF0YSgpOwogICAgICAgICAgICB0aGlzLmxpc3RSZW5kZXJpbmcoKTsKICAgICAgICAgICAgdGhpcy5tYXJrQ2hvb3NlRGF5cygpOwogICAgICAgICAgICB0aGlzLmNoZWNrTGltaXRzKHRoaXMuY2FsZW5kYXIuY3VycmVudERhdGUpOwogICAgICAgIH0sCiAgICAgICAgdXBkYXRlQ2FsZW5kYXIoKSB7CiAgICAgICAgICAgIHRoaXMuc2V0RXhpc3RpbmdDYWxlbmRhckRhdGEoKTsKICAgICAgICAgICAgdGhpcy5saXN0UmVuZGVyaW5nKCk7CiAgICAgICAgICAgIHRoaXMubWFya0Nob29zZURheXMoKTsKICAgICAgICB9LAogICAgICAgIHNldENhbGVuZGFyRGF0YSgpIHsKICAgICAgICAgICAgbGV0IGRhdGUgPSB0aGlzLmNhbGVuZGFyLmN1cnJlbnREYXRlOwogICAgICAgICAgICBkYXRlID0gbmV3IERhdGUoZGF0ZS5nZXRGdWxsWWVhcigpLCBkYXRlLmdldE1vbnRoKCkgLSAxKTsKCiAgICAgICAgICAgIHRoaXMubGlzdENhbGVuZGFycyA9IFtdOwoKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmZDb25maWdzLmNhbGVuZGFyc0NvdW50OyBpKyspIHsKICAgICAgICAgICAgICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSArIDEpOwoKICAgICAgICAgICAgICAgIGxldCBjYWxlbmRhciA9IHsKICAgICAgICAgICAgICAgICAgICBrZXk6IGksCiAgICAgICAgICAgICAgICAgICAgZGF0ZTogZGF0ZSwKICAgICAgICAgICAgICAgICAgICBkYXRlVG9wOiBgJHt0aGlzLmZDb25maWdzLm1vbnRoTmFtZXNbZGF0ZS5nZXRNb250aCgpXX0gJHtkYXRlLmdldEZ1bGxZZWFyKCl9YCwKICAgICAgICAgICAgICAgICAgICBtb250aDogdGhpcy5mQ29uZmlncy5tb250aE5hbWVzW2RhdGUuZ2V0TW9udGgoKV0sCiAgICAgICAgICAgICAgICAgICAgeWVhcjogZGF0ZS5nZXRGdWxsWWVhcigpLAogICAgICAgICAgICAgICAgICAgIHdlZWtzOiBoZWxwQ2FsZW5kYXIuZ2V0RmluYWxpemVkV2Vla3MoZGF0ZS5nZXRNb250aCgpLCBkYXRlLmdldEZ1bGxZZWFyKCkpCiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgIHRoaXMubGlzdENhbGVuZGFycy5wdXNoKGNhbGVuZGFyKTsKCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuZkNvbmZpZ3MuaXNNdWx0aXBsZSkgewogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXRFeGlzdGluZ0NhbGVuZGFyRGF0YSgpIHsKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmxpc3RDYWxlbmRhcnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIGxldCBjYWxlbmRhciA9IHRoaXMubGlzdENhbGVuZGFyc1tpXTsKICAgICAgICAgICAgICAgIGxldCBkYXRlID0gY2FsZW5kYXIuZGF0ZTsKCiAgICAgICAgICAgICAgICB0aGlzLiRzZXQodGhpcy5saXN0Q2FsZW5kYXJzLCBpLCB7CiAgICAgICAgICAgICAgICAgICAga2V5OiBjYWxlbmRhci5rZXksCiAgICAgICAgICAgICAgICAgICAgZGF0ZTogZGF0ZSwKICAgICAgICAgICAgICAgICAgICBkYXRlVG9wOiBgJHt0aGlzLmZDb25maWdzLm1vbnRoTmFtZXNbZGF0ZS5nZXRNb250aCgpXX0gJHtkYXRlLmdldEZ1bGxZZWFyKCl9YCwKICAgICAgICAgICAgICAgICAgICBtb250aDogdGhpcy5mQ29uZmlncy5tb250aE5hbWVzW2RhdGUuZ2V0TW9udGgoKV0sCiAgICAgICAgICAgICAgICAgICAgeWVhcjogZGF0ZS5nZXRGdWxsWWVhcigpLAogICAgICAgICAgICAgICAgICAgIHdlZWtzOiBoZWxwQ2FsZW5kYXIuZ2V0RmluYWxpemVkV2Vla3MoZGF0ZS5nZXRNb250aCgpLCBkYXRlLmdldEZ1bGxZZWFyKCkpCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuZkNvbmZpZ3MuaXNNdWx0aXBsZSkgewogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXRDb25maWdzKCkgewogICAgICAgICAgICBsZXQgdm0gPSB0aGlzOwogICAgICAgICAgICBsZXQgZ2xvYmFsT3B0aW9uczsKICAgICAgICAgICAgaWYgKHR5cGVvZiB2bS4kZ2V0T3B0aW9ucyAhPT0gInVuZGVmaW5lZCIpIHsKICAgICAgICAgICAgICAgIC8vIEdsb2JhbCBPcHRpb25zCiAgICAgICAgICAgICAgICBnbG9iYWxPcHRpb25zID0gdm0uJGdldE9wdGlvbnMoKTsKICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKGdsb2JhbE9wdGlvbnMpLm1hcChmdW5jdGlvbiAob2JqZWN0S2V5KSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiAodm0uZkNvbmZpZ3Nbb2JqZWN0S2V5XSkgIT09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZtLiRzZXQodm0uZkNvbmZpZ3MsIG9iamVjdEtleSwgZ2xvYmFsT3B0aW9uc1tvYmplY3RLZXldKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHR5cGVvZiAodm0uY29uZmlncykgIT09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyh2bS5mQ29uZmlncykubWFwKGZ1bmN0aW9uIChvYmplY3RLZXkpIHsKICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mICh2bS5jb25maWdzW29iamVjdEtleV0pICE9PSAidW5kZWZpbmVkIikgewogICAgICAgICAgICAgICAgICAgICAgICAvLyBHZXQgRnJvbSBDb25maWdzCiAgICAgICAgICAgICAgICAgICAgICAgIHZtLiRzZXQodm0uZkNvbmZpZ3MsIG9iamVjdEtleSwgdm0uY29uZmlnc1tvYmplY3RLZXldKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKHZtLiRwcm9wcykubWFwKGZ1bmN0aW9uIChvYmplY3RLZXkpIHsKICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mICh2bS5mQ29uZmlnc1tvYmplY3RLZXldKSAhPT0gInVuZGVmaW5lZCIgJiYKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mICh2bS4kcHJvcHNbb2JqZWN0S2V5XSkgIT09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZtLiRzZXQodm0uZkNvbmZpZ3MsIG9iamVjdEtleSwgdm0uJHByb3BzW29iamVjdEtleV0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgoKICAgICAgICAgICAgLy8gSXMgTW9kYWwKICAgICAgICAgICAgaWYgKHZtLmZDb25maWdzLmlzTW9kYWwpIHZtLnNob3dDYWxlbmRhciA9IGZhbHNlOwoKICAgICAgICAgICAgLy8gUGxhY2Vob2xkZXIKICAgICAgICAgICAgaWYgKCF2bS5mQ29uZmlncy5wbGFjZWhvbGRlcikgdm0uZkNvbmZpZ3MucGxhY2Vob2xkZXIgPSB2bS5mQ29uZmlncy5kYXRlRm9ybWF0OwoKICAgICAgICAgICAgaWYgKHR5cGVvZiB2bS5uZXdDdXJyZW50RGF0ZSAhPT0gInVuZGVmaW5lZCIpIHsKICAgICAgICAgICAgICAgIHZtLmNhbGVuZGFyLmN1cnJlbnREYXRlID0gdm0ubmV3Q3VycmVudERhdGU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIFN1bmRheSBTdGFydAogICAgICAgICAgICBpZiAodm0uZkNvbmZpZ3Muc3VuZGF5U3RhcnQpIHsKICAgICAgICAgICAgICAgIGxldCBkYXlOYW1lcyA9IHZtLmZDb25maWdzLmRheU5hbWVzOwogICAgICAgICAgICAgICAgbGV0IHN1bmRheU5hbWUgPSBkYXlOYW1lc1tkYXlOYW1lcy5sZW5ndGggLSAxXTsKICAgICAgICAgICAgICAgIGRheU5hbWVzLnNwbGljZShkYXlOYW1lcy5sZW5ndGggLSAxLCAxKTsKICAgICAgICAgICAgICAgIGRheU5hbWVzLnVuc2hpZnQoc3VuZGF5TmFtZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxpc3RSZW5kZXJpbmcoKSB7CiAgICAgICAgICAgIGxldCB2bSA9IHRoaXM7CgogICAgICAgICAgICAvLyBFYWNoIENhbGVuZGFycwogICAgICAgICAgICB2bS5saXN0Q2FsZW5kYXJzLmZvckVhY2goZnVuY3Rpb24gKGNhbGVuZGFyKSB7CiAgICAgICAgICAgICAgICAvLyBTZXQgQ2FsZW5kYXIgV2Vla3MKICAgICAgICAgICAgICAgIGNhbGVuZGFyLndlZWtzLmZvckVhY2goZnVuY3Rpb24gKHdlZWspIHsKCiAgICAgICAgICAgICAgICAgICAgbGV0IGZpbmFsaXplZERheXMgPSBbXTsKCiAgICAgICAgICAgICAgICAgICAgd2Vlay5kYXlzLmZvckVhY2goZnVuY3Rpb24gKGRheSkgewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGF0ZSA9IG5ldyBEYXRlKGRheS55ZWFyLCBkYXkubW9udGgsIGRheS5kYXkpOwogICAgICAgICAgICAgICAgICAgICAgICBsZXQgbm93ID0gbmV3IERhdGUoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBpc1RvZGF5ID0gZmFsc2U7CgogICAgICAgICAgICAgICAgICAgICAgICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApOwogICAgICAgICAgICAgICAgICAgICAgICBub3cuc2V0SG91cnMoMCwgMCwgMCwgMCk7CgogICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0ZS5nZXRUaW1lKCkgPT09IG5vdy5nZXRUaW1lKCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVG9kYXkgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBsZXQgY2hlY2tNYXJrZWQ7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdpdGggQ3VzdG9tIENsYXNzZXMKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2bS5mQ29uZmlncy5tYXJrZWREYXRlc1swXSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrTWFya2VkID0gdm0uZkNvbmZpZ3MubWFya2VkRGF0ZXMuZmluZChmdW5jdGlvbiAobWFya0RhdGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWFya0RhdGUuZGF0ZSA9PT0gaGVscENhbGVuZGFyLmZvcm1hdERhdGUoZGF0ZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gV2l0aG91dCBDbGFzc2VzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja01hcmtlZCA9IHZtLmZDb25maWdzLm1hcmtlZERhdGVzLmZpbmQoZnVuY3Rpb24gKG1hcmtEYXRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hcmtEYXRlID09PSBoZWxwQ2FsZW5kYXIuZm9ybWF0RGF0ZShkYXRlKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2bS5jYWxlbmRhci5kYXRlUmFuZ2Uuc3RhcnQuZGF0ZSA9PT0gaGVscENhbGVuZGFyLmZvcm1hdERhdGUoZGF0ZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrTWFya2VkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGlzTWFya2VkID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgY2hlY2tNYXJrZWQgIT09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc01hcmtlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsaXplZERheXMucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXk6IGRheS5kYXksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlOiBoZWxwQ2FsZW5kYXIuZm9ybWF0RGF0ZShkYXRlKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpZGU6IGRheS5oaWRlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNNb3VzZVRvTGVmdDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc01vdXNlVG9SaWdodDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0hvdmVyZWQ6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNEYXRlUmFuZ2VTdGFydDogdm0uY2hlY2tEYXRlUmFuZ2VTdGFydChoZWxwQ2FsZW5kYXIuZm9ybWF0RGF0ZShkYXRlKSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0RhdGVSYW5nZUVuZDogdm0uY2hlY2tEYXRlUmFuZ2VFbmQoaGVscENhbGVuZGFyLmZvcm1hdERhdGUoZGF0ZSkpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlkZUxlZnRBbmRSaWdodERheXM6IGRheS5oaWRlTGVmdEFuZFJpZ2h0RGF5cywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVG9kYXk6IGlzVG9kYXksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc01hcmtlZDogaXNNYXJrZWQKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgIHdlZWsuZGF5cyA9IGZpbmFsaXplZERheXM7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CgogICAgICAgIH0sCiAgICAgICAgY2xpY2tEYXkoaXRlbSkgewogICAgICAgICAgICBpZiAoIXRoaXMuZkNvbmZpZ3MuaXNEYXRlUmFuZ2UgJiYgIXRoaXMuZkNvbmZpZ3MuaXNEYXRlUGlja2VyICYmICF0aGlzLmZDb25maWdzLmlzTXVsdGlwbGVEYXRlUGlja2VyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIERpc2FibGUgZGF5cyBvZiB3ZWVrIGlmIHNldCBpbiBjb25maWd1cmF0aW9uCiAgICAgICAgICAgIGxldCBkYXRlRGF5ID0gaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KGl0ZW0uZGF0ZSkuZ2V0RGF5KCkgLSAxOwogICAgICAgICAgICBpZiAoZGF0ZURheSA9PT0gLTEpIHsKICAgICAgICAgICAgICAgIGRhdGVEYXkgPSA2OwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZXQgZGF5T2ZXZWVrU3RyaW5nID0gdGhpcy5mQ29uZmlncy5kYXlOYW1lc1tkYXRlRGF5XTsKICAgICAgICAgICAgaWYgKHRoaXMuZkNvbmZpZ3MuZGlzYWJsZWREYXlOYW1lcy5pbmNsdWRlcyhkYXlPZldlZWtTdHJpbmcpKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIERpc2FibGVkIGRhdGVzCiAgICAgICAgICAgIGlmICh0aGlzLmZDb25maWdzLmRpc2FibGVkRGF0ZXMuaW5jbHVkZXMoaXRlbS5kYXRlKSkgewogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBMaW1pdHMKICAgICAgICAgICAgaWYgKHRoaXMuZkNvbmZpZ3MubGltaXRzKSB7CiAgICAgICAgICAgICAgICBsZXQgbWluID0gaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KHRoaXMuZkNvbmZpZ3MubGltaXRzLm1pbikuZ2V0VGltZSgpOwogICAgICAgICAgICAgICAgbGV0IG1heCA9IGhlbHBDYWxlbmRhci5nZXREYXRlRnJvbUZvcm1hdCh0aGlzLmZDb25maWdzLmxpbWl0cy5tYXgpLmdldFRpbWUoKTsKICAgICAgICAgICAgICAgIGxldCBkYXRlID0gaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KGl0ZW0uZGF0ZSkuZ2V0VGltZSgpOwoKICAgICAgICAgICAgICAgIGlmIChkYXRlIDwgbWluIHx8IGRhdGUgPiBtYXgpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIERhdGUgUmFuZ2UKICAgICAgICAgICAgaWYgKHRoaXMuZkNvbmZpZ3MuaXNEYXRlUmFuZ2UpIHsKCiAgICAgICAgICAgICAgICBsZXQgY2xpY2tEYXRlID0gaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KGl0ZW0uZGF0ZSkuZ2V0VGltZSgpOwoKICAgICAgICAgICAgICAgIGxldCBzdGFydERhdGUgPSBmYWxzZTsKICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhbGVuZGFyLmRhdGVSYW5nZS5zdGFydC5kYXRlKSB7CiAgICAgICAgICAgICAgICAgICAgc3RhcnREYXRlID0gaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KHRoaXMuY2FsZW5kYXIuZGF0ZVJhbmdlLnN0YXJ0LmRhdGUpLmdldFRpbWUoKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBUd28gZGF0ZXMgaXMgbm90IGVtcHR5CiAgICAgICAgICAgICAgICBpZiAodGhpcy5jYWxlbmRhci5kYXRlUmFuZ2Uuc3RhcnQuZGF0ZSAhPT0gZmFsc2UgJiYgdGhpcy5jYWxlbmRhci5kYXRlUmFuZ2UuZW5kLmRhdGUgIT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5kYXRlUmFuZ2Uuc3RhcnQuZGF0ZSA9IGl0ZW0uZGF0ZTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLmRhdGVSYW5nZS5lbmQuZGF0ZSA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgIC8vIE5vdCBkYXRlIHNlbGVjdGVkCiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuY2FsZW5kYXIuZGF0ZVJhbmdlLnN0YXJ0LmRhdGUgPT09IGZhbHNlICYmIHRoaXMuY2FsZW5kYXIuZGF0ZVJhbmdlLmVuZC5kYXRlID09PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuZGF0ZVJhbmdlLnN0YXJ0LmRhdGUgPSBpdGVtLmRhdGU7CiAgICAgICAgICAgICAgICAgICAgLy8gU3RhcnQgRGF0ZSBub3QgZW1wdHksIGNob3NlIGRhdGUgPiBzdGFydCBkYXRlCiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuY2FsZW5kYXIuZGF0ZVJhbmdlLmVuZC5kYXRlID09PSBmYWxzZSAmJiAoY2xpY2tEYXRlID4gc3RhcnREYXRlKSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuZGF0ZVJhbmdlLmVuZC5kYXRlID0gaXRlbS5kYXRlOwogICAgICAgICAgICAgICAgICAgIC8vIFN0YXJ0IGRhdGUgbm90IGVtcHR5LCBjaG9zZSBkYXRlIDw9IHN0YXJ0IGRhdGUgKGFsc28gc2FtZSBkYXRlIHJhbmdlIHNlbGVjdCkKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5jYWxlbmRhci5kYXRlUmFuZ2Uuc3RhcnQuZGF0ZSAhPT0gZmFsc2UgJiYgKGNsaWNrRGF0ZSA8PSBzdGFydERhdGUpKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5kYXRlUmFuZ2UuZW5kLmRhdGUgPSB0aGlzLmNhbGVuZGFyLmRhdGVSYW5nZS5zdGFydC5kYXRlOwogICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuZGF0ZVJhbmdlLnN0YXJ0LmRhdGUgPSBpdGVtLmRhdGU7CiAgICAgICAgICAgICAgICB9CgoKICAgICAgICAgICAgICAgIC8vR2V0IG51bWJlciBvZiBkYXlzIGJldHdlZW4gZGF0ZSByYW5nZSBkYXRlcwogICAgICAgICAgICAgICAgaWYgKHRoaXMuY2FsZW5kYXIuZGF0ZVJhbmdlLnN0YXJ0LmRhdGUgIT09IGZhbHNlICYmIHRoaXMuY2FsZW5kYXIuZGF0ZVJhbmdlLmVuZC5kYXRlICE9PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgIGxldCBvbmVEYXkgPSAyNCAqIDYwICogNjAgKiAxMDAwOwogICAgICAgICAgICAgICAgICAgIGxldCBmaXJzdERhdGUgPSBoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQodGhpcy5jYWxlbmRhci5kYXRlUmFuZ2Uuc3RhcnQuZGF0ZSk7CiAgICAgICAgICAgICAgICAgICAgbGV0IHNlY29uZERhdGUgPSBoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQodGhpcy5jYWxlbmRhci5kYXRlUmFuZ2UuZW5kLmRhdGUpOwogICAgICAgICAgICAgICAgICAgIGxldCBkaWZmRGF5cyA9IE1hdGgucm91bmQoTWF0aC5hYnMoKGZpcnN0RGF0ZS5nZXRUaW1lKCkgLSBzZWNvbmREYXRlLmdldFRpbWUoKSkgLyAob25lRGF5KSkpOwoKICAgICAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdzZWxlY3RlZERheXNDb3VudCcsIGRpZmZEYXlzKTsKCiAgICAgICAgICAgICAgICAgICAgLy8gSXMgQXV0byBDbG9zZWFibGUKICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5mQ29uZmlncy5pc01vZGFsICYmIHRoaXMuZkNvbmZpZ3MuaXNBdXRvQ2xvc2VhYmxlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0NhbGVuZGFyID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5jYWxlbmRhcik7CiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5mQ29uZmlncy5pc0RhdGVQaWNrZXIpIHsKICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuc2VsZWN0ZWREYXRlID0gaXRlbS5kYXRlOwogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLmNhbGVuZGFyKTsKCiAgICAgICAgICAgICAgICAvLyBJcyBBdXRvIENsb3NlYWJsZQogICAgICAgICAgICAgICAgaWYgKHRoaXMuZkNvbmZpZ3MuaXNNb2RhbCAmJiB0aGlzLmZDb25maWdzLmlzQXV0b0Nsb3NlYWJsZSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0NhbGVuZGFyID0gZmFsc2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5mQ29uZmlncy5pc011bHRpcGxlRGF0ZVBpY2tlcikgewogICAgICAgICAgICAgICAgaWYgKHRoaXMuY2FsZW5kYXIuc2VsZWN0ZWREYXRlcy5maW5kKGRhdGUgPT4gZGF0ZS5kYXRlID09PSBpdGVtLmRhdGUpKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IGRhdGVJbmRleCA9IHRoaXMuY2FsZW5kYXIuc2VsZWN0ZWREYXRlcy5maW5kSW5kZXgoZGF0ZSA9PiBkYXRlLmRhdGUgPT09IGl0ZW0uZGF0ZSk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5zZWxlY3RlZERhdGVzLnNwbGljZShkYXRlSW5kZXgsIDEpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBsZXQgZGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZGVmYXVsdERhdGVGb3JtYXQpOwogICAgICAgICAgICAgICAgICAgIGRhdGUuZGF0ZSA9IGl0ZW0uZGF0ZTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLnNlbGVjdGVkRGF0ZXMucHVzaChkYXRlKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHRoaXMuY2FsZW5kYXIpOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aGlzLm1hcmtDaG9vc2VEYXlzKCk7CgogICAgICAgICAgICAvLyBUaW1lIFBpY2tlcgogICAgICAgICAgICBpZiAodGhpcy5mQ29uZmlncy53aXRoVGltZVBpY2tlcikgewogICAgICAgICAgICAgICAgaWYgKHRoaXMuZkNvbmZpZ3MuaXNEYXRlUmFuZ2UgfHwgdGhpcy5mQ29uZmlncy5pc0RhdGVQaWNrZXIpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLm9wZW5UaW1lUGlja2VyKCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKHRoaXMuY2FsZW5kYXIuc2VsZWN0ZWREYXRlcy5maW5kKGRhdGUgPT4gZGF0ZS5kYXRlID09PSBpdGVtLmRhdGUpICYmIHRoaXMuZkNvbmZpZ3MuaXNNdWx0aXBsZURhdGVQaWNrZXIpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLm9wZW5UaW1lUGlja2VyKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2Nob3NlRGF5JywgaXRlbSk7CiAgICAgICAgfSwKICAgICAgICBtYXJrQ2hvb3NlRGF5cygpIHsKICAgICAgICAgICAgbGV0IHZtID0gdGhpczsKICAgICAgICAgICAgbGV0IHN0YXJ0RGF0ZSA9IHZtLmNhbGVuZGFyLmRhdGVSYW5nZS5zdGFydC5kYXRlOwogICAgICAgICAgICBsZXQgZW5kRGF0ZSA9IHZtLmNhbGVuZGFyLmRhdGVSYW5nZS5lbmQuZGF0ZTsKCiAgICAgICAgICAgIHRoaXMubGlzdENhbGVuZGFycy5mb3JFYWNoKChjYWxlbmRhcikgPT4gewogICAgICAgICAgICAgICAgY2FsZW5kYXIud2Vla3MuZm9yRWFjaCgod2VlaykgPT4gewogICAgICAgICAgICAgICAgICAgIHdlZWsuZGF5cy5mb3JFYWNoKChkYXkpID0+IHsKCiAgICAgICAgICAgICAgICAgICAgICAgIGRheS5pc01hcmtlZCA9IGZhbHNlOwoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gRGF0ZSBQaWNrZXIKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZtLmZDb25maWdzLmlzRGF0ZVBpY2tlcikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuY2FsZW5kYXIuc2VsZWN0ZWREYXRlID09PSBkYXkuZGF0ZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXkuaXNNYXJrZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHZtLmZDb25maWdzLmlzTXVsdGlwbGVEYXRlUGlja2VyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodm0uY2FsZW5kYXIuc2VsZWN0ZWREYXRlcy5maW5kKGRhdGUgPT4gZGF0ZS5kYXRlID09PSBkYXkuZGF0ZSkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5LmlzTWFya2VkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheS5pc01vdXNlVG9MZWZ0ID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXkuaXNNb3VzZVRvUmlnaHQgPSBmYWxzZTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBEYXRlIFJhbmdlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnREYXRlID09PSBkYXkuZGF0ZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheS5pc01vdXNlVG9MZWZ0ID0gISFlbmREYXRlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheS5pc01hcmtlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVuZERhdGUgPT09IGRheS5kYXRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5LmlzTW91c2VUb1JpZ2h0ID0gISFlbmREYXRlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheS5pc01hcmtlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0RGF0ZSAmJiBzdGFydERhdGUgPT09IGVuZERhdGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXkuaXNNb3VzZVRvTGVmdCA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5LmlzTW91c2VUb1JpZ2h0ID0gZmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnREYXRlICYmIGVuZERhdGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KGRheS5kYXRlKS5nZXRUaW1lKCkgPiBoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQoc3RhcnREYXRlKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiBoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQoZGF5LmRhdGUpIDwgaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KGVuZERhdGUpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheS5pc01hcmtlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5mQ29uZmlncy5tYXJrZWREYXRlcy5pbmNsdWRlcyhkYXkuZGF0ZSkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXkuaXNNYXJrZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgZGF5TW91c2VPdmVyKHdlZWtfa2V5LCBkYXRlKSB7CiAgICAgICAgICAgIGlmICghdGhpcy5mQ29uZmlncy5pc0RhdGVSYW5nZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBMaW1pdHMKICAgICAgICAgICAgaWYgKHRoaXMuZkNvbmZpZ3MubGltaXRzKSB7CiAgICAgICAgICAgICAgICBsZXQgbGltaXRNaW4gPSBoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQodGhpcy5mQ29uZmlncy5saW1pdHMubWluKS5nZXRUaW1lKCk7CiAgICAgICAgICAgICAgICBsZXQgbGltaXRNYXggPSBoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQodGhpcy5mQ29uZmlncy5saW1pdHMubWF4KS5nZXRUaW1lKCk7CiAgICAgICAgICAgICAgICBsZXQgbGltaXREYXRlID0gaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KGRhdGUpLmdldFRpbWUoKTsKCiAgICAgICAgICAgICAgICBpZiAobGltaXREYXRlIDwgbGltaXRNaW4gfHwgbGltaXREYXRlID4gbGltaXRNYXgpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgodGhpcy5jYWxlbmRhci5kYXRlUmFuZ2Uuc3RhcnQuZGF0ZSA9PT0gZmFsc2UgfHwgdGhpcy5jYWxlbmRhci5kYXRlUmFuZ2UuZW5kLmRhdGUgPT09IGZhbHNlKQogICAgICAgICAgICAgICAgJiYgKHRoaXMuY2FsZW5kYXIuZGF0ZVJhbmdlLnN0YXJ0LmRhdGUgIT09IGZhbHNlIHx8IHRoaXMuY2FsZW5kYXIuZGF0ZVJhbmdlLmVuZC5kYXRlICE9PSBmYWxzZSkpIHsKCiAgICAgICAgICAgICAgICBmb3IgKGxldCBlID0gMDsgZSA8IHRoaXMubGlzdENhbGVuZGFycy5sZW5ndGg7IGUrKykgewogICAgICAgICAgICAgICAgICAgIGxldCBjYWxlbmRhciA9IHRoaXMubGlzdENhbGVuZGFyc1tlXTsKCiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgZiA9IDA7IGYgPCBjYWxlbmRhci53ZWVrcy5sZW5ndGg7IGYrKykgewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgd2VlayA9IGNhbGVuZGFyLndlZWtzW2ZdOwoKICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB3ZWVrLmRheXMubGVuZ3RoOyBpKyspIHsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgaXRlbSA9IHdlZWsuZGF5c1tpXTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxpc3RDYWxlbmRhcnNbZV0ud2Vla3NbZl0uZGF5c1tpXS5pc0hvdmVyZWQgPSBmYWxzZTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5kYXRlICE9PSB0aGlzLmNhbGVuZGFyLmRhdGVSYW5nZS5zdGFydC5kYXRlICYmICF0aGlzLmZDb25maWdzLm1hcmtlZERhdGVzLmluY2x1ZGVzKGl0ZW0uZGF0ZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxpc3RDYWxlbmRhcnNbZV0ud2Vla3NbZl0uZGF5c1tpXS5pc01hcmtlZCA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhbGVuZGFyLmRhdGVSYW5nZS5zdGFydC5kYXRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGl0ZW1EYXRlID0gaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KGl0ZW0uZGF0ZSkuZ2V0VGltZSgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0aGlzRGF0ZSA9IGhlbHBDYWxlbmRhci5nZXREYXRlRnJvbUZvcm1hdChkYXRlKS5nZXRUaW1lKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHN0YXJ0RGF0ZSA9IGhlbHBDYWxlbmRhci5nZXREYXRlRnJvbUZvcm1hdCh0aGlzLmNhbGVuZGFyLmRhdGVSYW5nZS5zdGFydC5kYXRlKS5nZXRUaW1lKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubGlzdENhbGVuZGFyc1tlXS53ZWVrc1tmXS5kYXlzW2ldLmlzTW91c2VUb0xlZnQgPSAoaXRlbURhdGUgPT09IHN0YXJ0RGF0ZSAmJiB0aGlzRGF0ZSA+IHN0YXJ0RGF0ZSkgfHwgKGl0ZW1EYXRlID09PSB0aGlzRGF0ZSAmJiB0aGlzRGF0ZSA8IHN0YXJ0RGF0ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0Q2FsZW5kYXJzW2VdLndlZWtzW2ZdLmRheXNbaV0uaXNNb3VzZVRvUmlnaHQgPSAoaXRlbURhdGUgPT09IHN0YXJ0RGF0ZSAmJiB0aGlzRGF0ZSA8IHN0YXJ0RGF0ZSkgfHwgKGl0ZW1EYXRlID09PSB0aGlzRGF0ZSAmJiB0aGlzRGF0ZSA+IHN0YXJ0RGF0ZSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkYXRlRGF5ID0gaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KGl0ZW0uZGF0ZSkuZ2V0RGF5KCkgLSAxOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRlRGF5ID09PSAtMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlRGF5ID0gNjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkYXlPZldlZWtTdHJpbmcgPSB0aGlzLmZDb25maWdzLmRheU5hbWVzW2RhdGVEYXldOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5mQ29uZmlncy5kaXNhYmxlZERheU5hbWVzLmluY2x1ZGVzKGRheU9mV2Vla1N0cmluZykgJiYKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKChpdGVtRGF0ZSA+IHN0YXJ0RGF0ZSAmJiBpdGVtRGF0ZSA8IHRoaXNEYXRlKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChpdGVtRGF0ZSA8IHN0YXJ0RGF0ZSAmJiBpdGVtRGF0ZSA+IHRoaXNEYXRlKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0Q2FsZW5kYXJzW2VdLndlZWtzW2ZdLmRheXNbaV0uaXNNYXJrZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNhbGVuZGFyLmRhdGVSYW5nZS5lbmQuZGF0ZSAmJiBpdGVtRGF0ZSA9PT0gdGhpc0RhdGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0Q2FsZW5kYXJzW2VdLndlZWtzW2ZdLmRheXNbaV0uaXNIb3ZlcmVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgLyoqCiAgICAgICAgICogQHJldHVybiB7Ym9vbGVhbn0KICAgICAgICAgKi8KICAgICAgICBQcmVNb250aChjYWxlbmRhcktleSA9IG51bGwpIHsKICAgICAgICAgICAgaWYgKCF0aGlzLmFsbG93UHJlRGF0ZSkKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKCiAgICAgICAgICAgIHRoaXMudHJhbnNpdGlvblByZWZpeCA9ICdyaWdodCc7CgogICAgICAgICAgICBpZiAoY2FsZW5kYXJLZXkgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgIGxldCBjdXJyZW50Q2FsZW5kYXIgPSB0aGlzLmxpc3RDYWxlbmRhcnNbY2FsZW5kYXJLZXldOwogICAgICAgICAgICAgICAgY3VycmVudENhbGVuZGFyLmRhdGUgPSBuZXcgRGF0ZShjdXJyZW50Q2FsZW5kYXIuZGF0ZS5nZXRGdWxsWWVhcigpLCBjdXJyZW50Q2FsZW5kYXIuZGF0ZS5nZXRNb250aCgpIC0gMSk7CiAgICAgICAgICAgICAgICBjdXJyZW50Q2FsZW5kYXIua2V5IC09IDE7CiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUNhbGVuZGFyKCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyc0tleSAtPSAxOwogICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5jdXJyZW50RGF0ZSA9IG5ldyBEYXRlKHRoaXMuY2FsZW5kYXIuY3VycmVudERhdGUuZ2V0RnVsbFllYXIoKSwgdGhpcy5jYWxlbmRhci5jdXJyZW50RGF0ZS5nZXRNb250aCgpIC0gMSk7CiAgICAgICAgICAgICAgICB0aGlzLmluaXRDYWxlbmRhcigpOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aGlzLiRlbWl0KCdjaGFuZ2VkTW9udGgnLCB0aGlzLmNhbGVuZGFyLmN1cnJlbnREYXRlKTsKICAgICAgICB9LAogICAgICAgIC8qKgogICAgICAgICAqIEByZXR1cm4ge2Jvb2xlYW59CiAgICAgICAgICovCiAgICAgICAgTmV4dE1vbnRoKGNhbGVuZGFyS2V5ID0gbnVsbCkgewogICAgICAgICAgICBpZiAoIXRoaXMuYWxsb3dOZXh0RGF0ZSkKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKCiAgICAgICAgICAgIHRoaXMudHJhbnNpdGlvblByZWZpeCA9ICdsZWZ0JzsKCiAgICAgICAgICAgIGlmIChjYWxlbmRhcktleSAhPT0gbnVsbCkgewogICAgICAgICAgICAgICAgbGV0IGN1cnJlbnRDYWxlbmRhciA9IHRoaXMubGlzdENhbGVuZGFyc1tjYWxlbmRhcktleV07CiAgICAgICAgICAgICAgICBjdXJyZW50Q2FsZW5kYXIuZGF0ZSA9IG5ldyBEYXRlKGN1cnJlbnRDYWxlbmRhci5kYXRlLmdldEZ1bGxZZWFyKCksIGN1cnJlbnRDYWxlbmRhci5kYXRlLmdldE1vbnRoKCkgKyAxKTsKICAgICAgICAgICAgICAgIGN1cnJlbnRDYWxlbmRhci5rZXkgKz0gMTsKICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlQ2FsZW5kYXIoKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXJzS2V5ICs9IDE7CiAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLmN1cnJlbnREYXRlID0gbmV3IERhdGUodGhpcy5jYWxlbmRhci5jdXJyZW50RGF0ZS5nZXRGdWxsWWVhcigpLCB0aGlzLmNhbGVuZGFyLmN1cnJlbnREYXRlLmdldE1vbnRoKCkgKyAxKTsKICAgICAgICAgICAgICAgIHRoaXMuaW5pdENhbGVuZGFyKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZWRNb250aCcsIHRoaXMuY2FsZW5kYXIuY3VycmVudERhdGUpOwogICAgICAgIH0sCiAgICAgICAgLyoqCiAgICAgICAgICogQHJldHVybiB7Ym9vbGVhbn0KICAgICAgICAgKi8KICAgICAgICBQcmVZZWFyKGNhbGVuZGFyS2V5ID0gbnVsbCkgewogICAgICAgICAgICBpZiAoIXRoaXMuYWxsb3dQcmVEYXRlKQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgICAgICAgbGV0IHN0ZXAgPSB0aGlzLnNob3dZZWFyUGlja2VyID8gdGhpcy5mQ29uZmlncy5jaGFuZ2VZZWFyU3RlcCA6IDE7CgogICAgICAgICAgICBpZiAoY2FsZW5kYXJLZXkgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgIGxldCBjdXJyZW50Q2FsZW5kYXIgPSB0aGlzLmxpc3RDYWxlbmRhcnNbY2FsZW5kYXJLZXldOwogICAgICAgICAgICAgICAgY3VycmVudENhbGVuZGFyLmRhdGUgPSBuZXcgRGF0ZShjdXJyZW50Q2FsZW5kYXIuZGF0ZS5nZXRGdWxsWWVhcigpIC0gc3RlcCwgY3VycmVudENhbGVuZGFyLmRhdGUuZ2V0TW9udGgoKSk7CiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUNhbGVuZGFyKCk7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdjaGFuZ2VkWWVhcicsIGN1cnJlbnRDYWxlbmRhci5kYXRlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuY3VycmVudERhdGUgPSBuZXcgRGF0ZSh0aGlzLmNhbGVuZGFyLmN1cnJlbnREYXRlLmdldEZ1bGxZZWFyKCkgLSBzdGVwLCB0aGlzLmNhbGVuZGFyLmN1cnJlbnREYXRlLmdldE1vbnRoKCkpOwogICAgICAgICAgICAgICAgdGhpcy5pbml0Q2FsZW5kYXIoKTsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZWRZZWFyJywgdGhpcy5jYWxlbmRhci5jdXJyZW50RGF0ZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIC8qKgogICAgICAgICAqIEByZXR1cm4ge2Jvb2xlYW59CiAgICAgICAgICovCiAgICAgICAgTmV4dFllYXIoY2FsZW5kYXJLZXkgPSBudWxsKSB7CiAgICAgICAgICAgIGlmICghdGhpcy5hbGxvd05leHREYXRlKQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgICAgICAgbGV0IHN0ZXAgPSB0aGlzLnNob3dZZWFyUGlja2VyID8gdGhpcy5mQ29uZmlncy5jaGFuZ2VZZWFyU3RlcCA6IDE7CgogICAgICAgICAgICBpZiAoY2FsZW5kYXJLZXkgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgIGxldCBjdXJyZW50Q2FsZW5kYXIgPSB0aGlzLmxpc3RDYWxlbmRhcnNbY2FsZW5kYXJLZXldOwogICAgICAgICAgICAgICAgY3VycmVudENhbGVuZGFyLmRhdGUgPSBuZXcgRGF0ZShjdXJyZW50Q2FsZW5kYXIuZGF0ZS5nZXRGdWxsWWVhcigpICsgc3RlcCwgY3VycmVudENhbGVuZGFyLmRhdGUuZ2V0TW9udGgoKSk7CiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUNhbGVuZGFyKCk7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdjaGFuZ2VkWWVhcicsIGN1cnJlbnRDYWxlbmRhci5kYXRlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuY3VycmVudERhdGUgPSBuZXcgRGF0ZSh0aGlzLmNhbGVuZGFyLmN1cnJlbnREYXRlLmdldEZ1bGxZZWFyKCkgKyBzdGVwLCB0aGlzLmNhbGVuZGFyLmN1cnJlbnREYXRlLmdldE1vbnRoKCkpOwogICAgICAgICAgICAgICAgdGhpcy5pbml0Q2FsZW5kYXIoKTsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZWRZZWFyJywgdGhpcy5jYWxlbmRhci5jdXJyZW50RGF0ZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIENob29zZURhdGUoZGF0ZSkgewogICAgICAgICAgICBsZXQgbmV3RGF0ZSA9IGhlbHBDYWxlbmRhci5nZXREYXRlRnJvbUZvcm1hdChkYXRlKTsKCiAgICAgICAgICAgIGlmIChkYXRlID09PSAndG9kYXknKSB7CiAgICAgICAgICAgICAgICBuZXdEYXRlID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy5jYWxlbmRhci5jdXJyZW50RGF0ZSA9IG5ld0RhdGU7CiAgICAgICAgICAgIHRoaXMuaW5pdENhbGVuZGFyKCk7CiAgICAgICAgfSwKICAgICAgICBvcGVuTW9udGhQaWNrZXIoa2V5KSB7CiAgICAgICAgICAgIGlmICh0aGlzLmZDb25maWdzLmNoYW5nZU1vbnRoRnVuY3Rpb24pIHsKICAgICAgICAgICAgICAgIHRoaXMuc2hvd01vbnRoUGlja2VyID0gKGtleSA9PT0gdGhpcy5zaG93TW9udGhQaWNrZXIpID8gZmFsc2UgOiBrZXk7CiAgICAgICAgICAgICAgICB0aGlzLnNob3dZZWFyUGlja2VyID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9wZW5ZZWFyUGlja2VyKGtleSkgewogICAgICAgICAgICBpZiAodGhpcy5mQ29uZmlncy5jaGFuZ2VZZWFyRnVuY3Rpb24pIHsKICAgICAgICAgICAgICAgIHRoaXMuc2hvd1llYXJQaWNrZXIgPSAoa2V5ID09PSB0aGlzLnNob3dZZWFyUGlja2VyKSA/IGZhbHNlIDoga2V5OwogICAgICAgICAgICAgICAgdGhpcy5zaG93TW9udGhQaWNrZXIgPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgb3BlblRpbWVQaWNrZXIoKSB7CiAgICAgICAgICAgIHRoaXMuc2hvd1RpbWVQaWNrZXIgPSB0cnVlOwogICAgICAgIH0sCiAgICAgICAgcGlja01vbnRoKGNhbGVuZGFyS2V5ID0gbnVsbCwga2V5KSB7CiAgICAgICAgICAgIHRoaXMuc2hvd01vbnRoUGlja2VyID0gZmFsc2U7CgogICAgICAgICAgICBpZiAoY2FsZW5kYXJLZXkgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgIGxldCBjdXJyZW50Q2FsZW5kYXIgPSB0aGlzLmxpc3RDYWxlbmRhcnNbY2FsZW5kYXJLZXldOwogICAgICAgICAgICAgICAgbGV0IGRhdGUgPSBjdXJyZW50Q2FsZW5kYXIuZGF0ZTsKICAgICAgICAgICAgICAgIGN1cnJlbnRDYWxlbmRhci5kYXRlID0gbmV3IERhdGUoZGF0ZS5nZXRGdWxsWWVhcigpLCBrZXkgKyAxLCAwKTsKICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlQ2FsZW5kYXIoKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGxldCBkYXRlID0gdGhpcy5jYWxlbmRhci5jdXJyZW50RGF0ZTsKICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXIuY3VycmVudERhdGUgPSBuZXcgRGF0ZShkYXRlLmdldEZ1bGxZZWFyKCksIGtleSArIDEsIDApOwogICAgICAgICAgICAgICAgdGhpcy5pbml0Q2FsZW5kYXIoKTsKICAgICAgICAgICAgfQoKICAgICAgICB9LAogICAgICAgIHBpY2tZZWFyKGNhbGVuZGFyS2V5ID0gbnVsbCwgeWVhcikgewogICAgICAgICAgICB0aGlzLnNob3dZZWFyUGlja2VyID0gZmFsc2U7CgogICAgICAgICAgICBpZiAoY2FsZW5kYXJLZXkgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgIGxldCBjdXJyZW50Q2FsZW5kYXIgPSB0aGlzLmxpc3RDYWxlbmRhcnNbY2FsZW5kYXJLZXldOwogICAgICAgICAgICAgICAgbGV0IGRhdGUgPSBjdXJyZW50Q2FsZW5kYXIuZGF0ZTsKICAgICAgICAgICAgICAgIGN1cnJlbnRDYWxlbmRhci5kYXRlID0gbmV3IERhdGUoeWVhciwgZGF0ZS5nZXRNb250aCgpICsgMSwgMCk7CiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUNhbGVuZGFyKCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBsZXQgZGF0ZSA9IHRoaXMuY2FsZW5kYXIuY3VycmVudERhdGU7CiAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyLmN1cnJlbnREYXRlID0gbmV3IERhdGUoeWVhciwgZGF0ZS5nZXRNb250aCgpICsgMSwgMCk7CiAgICAgICAgICAgICAgICB0aGlzLmluaXRDYWxlbmRhcigpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBnZXRDbGFzc05hbWVzKGRheSkgewogICAgICAgICAgICBsZXQgY2xhc3NlcyA9IFtdOwoKICAgICAgICAgICAgLy8gRGlzYWJsZSBkYXlzIG9mIHdlZWsgaWYgc2V0IGluIGNvbmZpZ3VyYXRpb24KICAgICAgICAgICAgbGV0IGRhdGVEYXkgPSBoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQoZGF5LmRhdGUpLmdldERheSgpIC0gMTsKICAgICAgICAgICAgaWYgKGRhdGVEYXkgPT09IC0xKSB7CiAgICAgICAgICAgICAgICBkYXRlRGF5ID0gNjsKICAgICAgICAgICAgfQogICAgICAgICAgICBsZXQgZGF5T2ZXZWVrU3RyaW5nID0gdGhpcy5mQ29uZmlncy5kYXlOYW1lc1tkYXRlRGF5XTsKICAgICAgICAgICAgaWYgKHRoaXMuZkNvbmZpZ3MuZGlzYWJsZWREYXlOYW1lcy5pbmNsdWRlcyhkYXlPZldlZWtTdHJpbmcpKSB7CiAgICAgICAgICAgICAgICBkYXkuaGlkZSA9IHRydWU7CiAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3ZmYy1jdXJzb3Itbm90LWFsbG93ZWQnKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGV0IGRhdGUgPSBoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQoZGF5LmRhdGUpOwogICAgICAgICAgICBsZXQgdG9kYXkgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICB0b2RheS5zZXRIb3VycygwLCAwLCAwLCAwKTsKCgogICAgICAgICAgICAvLyBEaXNhYmxlZCBkYXRlcwogICAgICAgICAgICBpZiAodGhpcy5mQ29uZmlncy5kaXNhYmxlZERhdGVzLmluY2x1ZGVzKGRheS5kYXRlKSB8fAogICAgICAgICAgICAgICAgKHRoaXMuZkNvbmZpZ3MuZGlzYWJsZWREYXRlcy5pbmNsdWRlcygnYmVmb3JlVG9kYXknKSAmJiBkYXRlLmdldFRpbWUoKSA8IHRvZGF5LmdldFRpbWUoKSkgfHwKICAgICAgICAgICAgICAgICh0aGlzLmZDb25maWdzLmRpc2FibGVkRGF0ZXMuaW5jbHVkZXMoJ2FmdGVyVG9kYXknKSAmJiBkYXRlLmdldFRpbWUoKSA+IHRvZGF5LmdldFRpbWUoKSkKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3ZmYy1kaXNhYmxlZCcpOwogICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKCd2ZmMtY3Vyc29yLW5vdC1hbGxvd2VkJyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICh0aGlzLmZDb25maWdzLmxpbWl0cykgewogICAgICAgICAgICAgICAgbGV0IG1pbiA9IGhlbHBDYWxlbmRhci5nZXREYXRlRnJvbUZvcm1hdCh0aGlzLmZDb25maWdzLmxpbWl0cy5taW4pLmdldFRpbWUoKTsKICAgICAgICAgICAgICAgIGxldCBtYXggPSBoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQodGhpcy5mQ29uZmlncy5saW1pdHMubWF4KS5nZXRUaW1lKCk7CgogICAgICAgICAgICAgICAgaWYgKGRhdGUuZ2V0VGltZSgpIDwgbWluIHx8IGRhdGUuZ2V0VGltZSgpID4gbWF4KSB7CiAgICAgICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKCd2ZmMtZGlzYWJsZWQnKTsKICAgICAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3ZmYy1jdXJzb3Itbm90LWFsbG93ZWQnKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKGRheS5oaWRlKSB7CiAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3ZmYy1oaWRlJyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIFRvZGF5IGRhdGUKICAgICAgICAgICAgaWYgKGRheS5pc1RvZGF5KSB7CiAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3ZmYy10b2RheScpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoIWRheS5oaWRlTGVmdEFuZFJpZ2h0RGF5cyAmJiAhdGhpcy5mQ29uZmlncy5kaXNhYmxlZERheU5hbWVzLmluY2x1ZGVzKGRheU9mV2Vla1N0cmluZykpIHsKCiAgICAgICAgICAgICAgICAvLyBNYXJrIERhdGUKICAgICAgICAgICAgICAgIGlmIChkYXkuaXNNYXJrZWQpIHsKICAgICAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3ZmYy1tYXJrZWQnKTsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF5LmlzSG92ZXJlZCkgewogICAgICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaCgndmZjLWhvdmVyZWQnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAodGhpcy5mQ29uZmlncy5tYXJrZWREYXRlcy5pbmNsdWRlcyhkYXkuZGF0ZSkpIHsKICAgICAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3ZmYy1ib3JkZXJkJyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy8gRGF0ZSBSYW5nZSBNYXJrZWQKICAgICAgICAgICAgICAgIGlmICh0aGlzLmZDb25maWdzLm1hcmtlZERhdGVSYW5nZS5zdGFydCAmJiB0aGlzLmZDb25maWdzLm1hcmtlZERhdGVSYW5nZS5lbmQpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KHRoaXMuZkNvbmZpZ3MubWFya2VkRGF0ZVJhbmdlLnN0YXJ0KSA8PSBoZWxwQ2FsZW5kYXIuZ2V0RGF0ZUZyb21Gb3JtYXQoZGF5LmRhdGUpCiAgICAgICAgICAgICAgICAgICAgICAgICYmIGhlbHBDYWxlbmRhci5nZXREYXRlRnJvbUZvcm1hdCh0aGlzLmZDb25maWdzLm1hcmtlZERhdGVSYW5nZS5lbmQpID49IGhlbHBDYWxlbmRhci5nZXREYXRlRnJvbUZvcm1hdChkYXkuZGF0ZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKCd2ZmMtbWFya2VkJyk7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBpZiAoZGF5LmRhdGUgPT09IHRoaXMuZkNvbmZpZ3MubWFya2VkRGF0ZVJhbmdlLnN0YXJ0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaCgndmZjLXN0YXJ0LW1hcmtlZCcpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF5LmRhdGUgPT09IHRoaXMuZkNvbmZpZ3MubWFya2VkRGF0ZVJhbmdlLmVuZCkgewogICAgICAgICAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3ZmYy1lbmQtbWFya2VkJyk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKCiAgICAgICAgICAgICAgICAgICAgLy8gT25seSBBZnRlciBTdGFydCBNYXJrZWQKICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5mQ29uZmlncy5tYXJrZWREYXRlUmFuZ2Uuc3RhcnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhlbHBDYWxlbmRhci5nZXREYXRlRnJvbUZvcm1hdCh0aGlzLmZDb25maWdzLm1hcmtlZERhdGVSYW5nZS5zdGFydCkgPD0gaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KGRheS5kYXRlKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaCgndmZjLW1hcmtlZCcpOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgLy8gT25seSBCZWZvcmUgRW5kIE1hcmtlZAogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmZDb25maWdzLm1hcmtlZERhdGVSYW5nZS5lbmQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhlbHBDYWxlbmRhci5nZXREYXRlRnJvbUZvcm1hdCh0aGlzLmZDb25maWdzLm1hcmtlZERhdGVSYW5nZS5lbmQpID49IGhlbHBDYWxlbmRhci5nZXREYXRlRnJvbUZvcm1hdChkYXkuZGF0ZSkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3ZmYy1tYXJrZWQnKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKCd2ZmMtaG92ZXInKTsKICAgICAgICAgICAgfQoKCiAgICAgICAgICAgIC8vIERhdGUgTWFyayBXaXRoIEN1c3RvbSBDbGFzc2VzCiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5mQ29uZmlncy5tYXJrZWREYXRlcyA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgIGxldCBjaGVja01hcmtlZCA9IHRoaXMuZkNvbmZpZ3MubWFya2VkRGF0ZXMuZmluZChmdW5jdGlvbiAobWFya0RhdGUpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWFya0RhdGUuZGF0ZSA9PT0gZGF5LmRhdGU7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGNoZWNrTWFya2VkICE9PSAidW5kZWZpbmVkIikgewogICAgICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaChjaGVja01hcmtlZC5jbGFzcyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChkYXkuZGF0ZSA9PT0gdGhpcy5jYWxlbmRhci5kYXRlUmFuZ2Uuc3RhcnQuZGF0ZSkgewogICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKCd2ZmMtc3RhcnQtbWFya2VkJyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChkYXkuZGF0ZSA9PT0gdGhpcy5jYWxlbmRhci5kYXRlUmFuZ2UuZW5kLmRhdGUpIHsKICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaCgndmZjLWVuZC1tYXJrZWQnKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKGRheS5kYXRlID09PSB0aGlzLmNhbGVuZGFyLnNlbGVjdGVkRGF0ZSB8fCB0aGlzLmNhbGVuZGFyLnNlbGVjdGVkRGF0ZXMuZmluZChkYXRlID0+IGRhdGUuZGF0ZSA9PT0gZGF5LmRhdGUpKSB7CiAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3ZmYy1ib3JkZXJkJykKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIGNsYXNzZXM7CiAgICAgICAgfSwKICAgICAgICBjaGVja0RhdGVSYW5nZVN0YXJ0KGRhdGUpIHsKICAgICAgICAgICAgcmV0dXJuIGRhdGUgPT09IHRoaXMuZkNvbmZpZ3MubWFya2VkRGF0ZVJhbmdlLnN0YXJ0OwogICAgICAgIH0sCiAgICAgICAgY2hlY2tEYXRlUmFuZ2VFbmQoZGF0ZSkgewogICAgICAgICAgICByZXR1cm4gZGF0ZSA9PT0gdGhpcy5mQ29uZmlncy5tYXJrZWREYXRlUmFuZ2UuZW5kOwogICAgICAgIH0sCiAgICAgICAgY2hlY2tMaW1pdHModmFsdWUpIHsKICAgICAgICAgICAgaWYgKHRoaXMuZkNvbmZpZ3MubGltaXRzKSB7CiAgICAgICAgICAgICAgICBsZXQgbWluID0gbmV3IERhdGUoaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KHRoaXMuZkNvbmZpZ3MubGltaXRzLm1pbikpOwogICAgICAgICAgICAgICAgbWluLnNldERhdGUoMSk7CiAgICAgICAgICAgICAgICBtaW4uc2V0SG91cnMoMCwgMCwgMCwgMCk7CiAgICAgICAgICAgICAgICBsZXQgbWF4ID0gbmV3IERhdGUoaGVscENhbGVuZGFyLmdldERhdGVGcm9tRm9ybWF0KHRoaXMuZkNvbmZpZ3MubGltaXRzLm1heCkpOwogICAgICAgICAgICAgICAgbWF4LnNldERhdGUoMSk7CiAgICAgICAgICAgICAgICBtYXguc2V0SG91cnMoMCwgMCwgMCwgMCk7CgogICAgICAgICAgICAgICAgdGhpcy5hbGxvd1ByZURhdGUgPSB0cnVlOwogICAgICAgICAgICAgICAgdGhpcy5hbGxvd05leHREYXRlID0gdHJ1ZTsKCiAgICAgICAgICAgICAgICBsZXQgY3VycmVudCA9IG5ldyBEYXRlKHZhbHVlKTsKICAgICAgICAgICAgICAgIGN1cnJlbnQuc2V0RGF0ZSgxKTsKICAgICAgICAgICAgICAgIGN1cnJlbnQuc2V0SG91cnMoMCwgMCwgMCwgMCk7CgogICAgICAgICAgICAgICAgaWYgKGN1cnJlbnQgPD0gbWluKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5hbGxvd1ByZURhdGUgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoY3VycmVudCA+PSBtYXgpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmFsbG93TmV4dERhdGUgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZ2V0VHJhbnNpdGlvbl8oKSB7CiAgICAgICAgICAgIGlmICghdGhpcy5mQ29uZmlncy50cmFuc2l0aW9uKQogICAgICAgICAgICAgICAgcmV0dXJuICcnOwoKICAgICAgICAgICAgbGV0IG5hbWUgPSAnJzsKICAgICAgICAgICAgaWYgKHRoaXMudHJhbnNpdGlvblByZWZpeCA9PT0gJ2xlZnQnKSB7CiAgICAgICAgICAgICAgICBuYW1lID0gJ3ZmYy1jYWxlbmRhci1zbGlkZS1sZWZ0JzsKICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRyYW5zaXRpb25QcmVmaXggPT09ICdyaWdodCcpIHsKICAgICAgICAgICAgICAgIG5hbWUgPSAndmZjLWNhbGVuZGFyLXNsaWRlLXJpZ2h0JzsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gbmFtZTsKICAgICAgICB9LAogICAgICAgIHNldENhbGVuZGFyU3R5bGVzKCkgewogICAgICAgICAgICBsZXQgZGF5ID0gdGhpcy4kcmVmcy5kYXlbMF07CiAgICAgICAgICAgIGxldCBjb250YWluZXIgPSB0aGlzLiRyZWZzLm1haW5Db250YWluZXI7CgogICAgICAgICAgICBjb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICIiOwogICAgICAgICAgICBsZXQgaGVpZ2h0ID0gY29udGFpbmVyLmNsaWVudEhlaWdodCArIChkYXkuY2xpZW50SGVpZ2h0ICsgKGRheS5jbGllbnRIZWlnaHQgLyAyLjUpKTsKICAgICAgICAgICAgY29udGFpbmVyLnN0eWxlLmhlaWdodCA9IGhlaWdodCArICJweCI7CgogICAgICAgICAgICBpZiAodGhpcy5mQ29uZmlncy5pc01vZGFsKSB7CiAgICAgICAgICAgICAgICBjb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIgogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjaGVja0hpZGRlbkVsZW1lbnQoZWxlbWVudE5hbWUpIHsKICAgICAgICAgICAgcmV0dXJuICF0aGlzLmZDb25maWdzLmhpZGRlbkVsZW1lbnRzLmluY2x1ZGVzKGVsZW1lbnROYW1lKTsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["FunctionalCalendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FunctionalCalendar.vue","sourceRoot":"node_modules/vue-functional-calendar/src/components","sourcesContent":["<template>\r\n    <div :class=\"{'vfc-styles-conditional-class': fConfigs.applyStylesheet}\">\r\n        <div class=\"vfc-multiple-input\" :class=\"{'vfc-dark': fConfigs.isDark}\"\r\n             v-if=\"fConfigs.isModal && fConfigs.isDateRange\">\r\n            <input type=\"text\" title=\"Start Date\"\r\n                   v-model=\"input.dateRange.start.date\"\r\n                   :placeholder=\"fConfigs.placeholder\"\r\n                   :readonly=\"!fConfigs.isTypeable\"\r\n                   :maxlength=\"fConfigs.dateFormat.length\"\r\n                   @click=\"showCalendar = !showCalendar\">\r\n            <input type=\"text\" title=\"End Date\"\r\n                   v-model=\"input.dateRange.end.date\"\r\n                   :placeholder=\"fConfigs.placeholder\"\r\n                   :readonly=\"!fConfigs.isTypeable\"\r\n                   :maxlength=\"fConfigs.dateFormat.length\"\r\n                   @click=\"showCalendar = !showCalendar\">\r\n        </div>\r\n        <div :class=\"{'vfc-dark': fConfigs.isDark}\" v-else-if=\"fConfigs.isModal && fConfigs.isDatePicker\">\r\n            <input class=\"vfc-single-input\" type=\"text\" title=\"Date\"\r\n                   v-model=\"input.selectedDate\"\r\n                   :placeholder=\"fConfigs.placeholder\"\r\n                   :readonly=\"!fConfigs.isTypeable\"\r\n                   :maxlength=\"fConfigs.dateFormat.length\"\r\n                   @click=\"showCalendar = !showCalendar\">\r\n        </div>\r\n\r\n        <div class=\"vfc-main-container\" v-show=\"showCalendar\"\r\n             ref=\"mainContainer\"\r\n             :class=\"{'vfc-modal': fConfigs.isModal && (fConfigs.isDatePicker || fConfigs.isDateRange), 'vfc-dark': fConfigs.isDark}\">\r\n            <time-picker v-if=\"showTimePicker\"></time-picker>\r\n            <template v-else>\r\n                <div class=\"vfc-calendars-container\">\r\n                    <div class=\"vfc-navigation-buttons\" ref=\"navigationButtons\"\r\n                         v-if=\"checkHiddenElement('navigationArrows') && !fConfigs.isSeparately\">\r\n                        <div @click=\"PreMonth()\" :class=\"{'vfc-cursor-pointer': allowPreDate}\">\r\n                            <div class=\"vfc-arrow-left\" :class=\"{'vfc-disabled': !allowPreDate}\"></div>\r\n                        </div>\r\n                        <div @click=\"NextMonth()\" :class=\"{'vfc-cursor-pointer': allowNextDate}\">\r\n                            <div class=\"vfc-arrow-right\" :class=\"{'vfc-disabled': !allowNextDate}\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"vfc-calendars\" :key=\"calendarsKey\" ref=\"calendars\">\r\n                        <div class=\"vfc-calendar\" v-for=\"(calendarItem, key) in listCalendars\" :key=\"calendarItem.key\">\r\n                            <month-year-picker ref=\"monthContainer\"\r\n                                               v-show=\"showMonthPicker === key+1 || showYearPicker === key+1\"\r\n                                               :calendar-key=\"key\">\r\n                            </month-year-picker>\r\n                            <div class=\"vfc-content\">\r\n                                <div class=\"vfc-separately-navigation-buttons\" v-if=\"fConfigs.isSeparately\">\r\n                                    <div @click=\"PreMonth(key)\" :class=\"{'vfc-cursor-pointer': allowPreDate}\">\r\n                                        <div class=\"vfc-arrow-left\" :class=\"{'vfc-disabled': !allowPreDate}\"></div>\r\n                                    </div>\r\n                                    <div @click=\"NextMonth(key)\" :class=\"{'vfc-cursor-pointer': allowNextDate}\">\r\n                                        <div class=\"vfc-arrow-right\" :class=\"{'vfc-disabled': !allowNextDate}\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <h2 class=\"vfc-top-date\"\r\n                                    v-if=\"checkHiddenElement('month')\">\r\n                                    <a href=\"#\" @click.prevent=\"openMonthPicker(key+1)\"\r\n                                       :class=\"{'vfc-cursor-pointer vfc-underline':fConfigs.changeMonthFunction, 'vfc-underline-active':showMonthPicker === key+1}\">\r\n                                        {{ calendarItem.month }}</a>\r\n                                    <a href=\"#\" @click.prevent=\"openYearPicker(key+1)\"\r\n                                       :class=\"{'vfc-cursor-pointer vfc-underline':fConfigs.changeYearFunction,  'vfc-underline-active':showYearPicker === key+1}\">\r\n                                        {{ calendarItem.year }}\r\n                                    </a>\r\n                                </h2>\r\n                                <section class=\"vfc-dayNames\">\r\n                                    <span v-for=\"(dayName, key) in fConfigs.dayNames\" :key=\"key\">\r\n                                        <template v-if=\"fConfigs.showWeekNumbers\">\r\n                                            {{ ++key }}.\r\n                                        </template>\r\n                                        <template v-if=\"checkHiddenElement('dayNames')\">\r\n                                            {{ dayName }}\r\n                                        </template>\r\n                                    </span>\r\n                                </section>\r\n                                <transition-group\r\n                                        tag='div'\r\n                                        :name='getTransition_()' appear>\r\n                                    <div class=\"vfc-week\" v-for=\"(week, week_key) in calendarItem.weeks\"\r\n                                         :key=\"week_key+0\">\r\n                                        <div class=\"vfc-day\" ref=\"day\" v-for=\"(day, day_key) in week.days\"\r\n                                             :key=\"day_key\">\r\n                                            <div v-if=\"(day.isDateRangeStart || day.isMouseToLeft) && !day.hideLeftAndRightDays\"\r\n                                                 class=\"vfc-base-start\"></div>\r\n                                            <div v-else-if=\"(day.isDateRangeEnd || day.isMouseToRight) && !day.hideLeftAndRightDays\"\r\n                                                 class=\"vfc-base-end\"></div>\r\n                                            <span v-if=\"!day.hideLeftAndRightDays\"\r\n                                                  data-date=\"\" :key=\"day_key\"\r\n                                                  class=\"vfc-span-day\"\r\n                                                  :class=\"getClassNames(day)\"\r\n                                                  @click=\"clickDay(day)\"\r\n                                                  @mouseover=\"dayMouseOver(week_key, day.date)\">\r\n                                                <slot :week=\"week\" :day=\"day\">\r\n                                                    {{ day.day }}\r\n                                                </slot>\r\n                                        </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </transition-group>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import helpCalendar from '../assets/js/calendar'\r\n    import {propsAndData} from \"../mixins/propsAndData\";\r\n    import TimePicker from \"./TimePicker\";\r\n    import MonthYearPicker from \"./MonthYearPicker\";\r\n\r\n    export default {\r\n        name: \"FunctionalCalendar\",\r\n        components: {MonthYearPicker, TimePicker},\r\n        mixins: [propsAndData],\r\n        created() {\r\n            this.setConfigs();\r\n            this.initCalendar();\r\n\r\n            if (this.fConfigs.isModal && !this.fConfigs.withTimePicker) {\r\n                // Event\r\n                window.addEventListener('click', (e) => {\r\n                    if (!this.$el.contains(e.target)) {\r\n                        this.showCalendar = false\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n            window.addEventListener('click', (e) => {\r\n                if (this.showMonthPicker || this.showYearPicker) {\r\n                    let key = this.showMonthPicker ? this.showMonthPicker - 1 : this.showYearPicker - 1;\r\n\r\n                    let element1 = this.$refs.calendars.querySelector(`.vfc-calendars .vfc-calendar:nth-child(${key + 1}) .vfc-top-date a:nth-child(1)`);\r\n                    let element2 = this.$refs.calendars.querySelector(`.vfc-calendars .vfc-calendar:nth-child(${key + 1}) .vfc-top-date a:nth-child(2)`);\r\n\r\n                    if (!this.$refs.monthContainer[key].$el.contains(e.target) && !element1.contains(e.target) && !element2.contains(e.target)) {\r\n                        this.showMonthPicker = this.showYearPicker = false\r\n                    }\r\n                }\r\n            });\r\n\r\n        },\r\n        mounted() {\r\n            // Reacts to external selected dates\r\n            this.$watch('value', function (value) {\r\n                if (this.fConfigs.isDateRange) {\r\n                    this.calendar.dateRange.start.date = value.dateRange.start.date || false;\r\n                    this.calendar.dateRange.end.date = value.dateRange.end.date || false\r\n                } else {\r\n                    this.calendar.selectedDate = value.selectedDate || false\r\n                }\r\n            }, {deep: true});\r\n\r\n            this.$watch('showCalendar', function (value) {\r\n                if (value)\r\n                    this.$emit('opened');\r\n                else\r\n                    this.$emit('closed');\r\n            }, {immediate: true, deep: true});\r\n\r\n            this.setCalendarStyles();\r\n        },\r\n        computed: {\r\n            yearList() {\r\n                let years = [];\r\n                let year = this.calendar.currentDate.getFullYear() - 4;\r\n                for (let i = 0; i < 12; i++) {\r\n                    let finalYear = year + i;\r\n\r\n                    years.push({\r\n                        year: finalYear\r\n                    });\r\n                }\r\n                return years;\r\n            }\r\n        },\r\n        watch: {\r\n            'calendar.selectedDate': {\r\n                handler(val) {\r\n                    this.input.selectedDate = val || '';\r\n                    this.markChooseDays();\r\n                }\r\n            },\r\n            'calendar.currentDate': {\r\n                handler(value) {\r\n                    this.$emit('input', this.calendar);\r\n                    this.checkLimits(value);\r\n                }\r\n            },\r\n            'calendar.dateRange.start.date': {\r\n                handler(val) {\r\n                    this.input.dateRange.start.date = val || '';\r\n                    this.markChooseDays();\r\n                }\r\n            },\r\n            'calendar.dateRange.end.date': {\r\n                handler(val) {\r\n                    this.input.dateRange.end.date = val || '';\r\n                    this.markChooseDays();\r\n                }\r\n            },\r\n            'input.selectedDate': {\r\n                handler(val) {\r\n                    this.input.selectedDate = val = helpCalendar.mask(val);\r\n                    if (helpCalendar.getDateFromFormat(val).getMonth()) {\r\n                        this.calendar.selectedDate = val;\r\n                        this.markChooseDays();\r\n                    }\r\n\r\n                    // Typeable\r\n                    if (helpCalendar.checkValidDate(val) && this.fConfigs.isTypeable) {\r\n                        this.ChooseDate(val);\r\n                    }\r\n                }\r\n            },\r\n            'input.dateRange.start.date': {\r\n                handler(val) {\r\n                    this.input.dateRange.start.date = val = helpCalendar.mask(val);\r\n                    if (helpCalendar.getDateFromFormat(val).getMonth()) {\r\n                        this.calendar.dateRange.start.date = val;\r\n                        this.markChooseDays();\r\n                    }\r\n\r\n                    // Typeable\r\n                    if (helpCalendar.checkValidDate(val) && this.fConfigs.isTypeable) {\r\n                        this.ChooseDate(val);\r\n                    }\r\n                }\r\n            },\r\n            'input.dateRange.end.date': {\r\n                handler(val) {\r\n                    this.input.dateRange.end.date = val = helpCalendar.mask(val);\r\n                    if (helpCalendar.getDateFromFormat(val).getMonth()) {\r\n                        this.calendar.dateRange.end.date = val;\r\n                        this.markChooseDays();\r\n                    }\r\n\r\n                    // Typeable\r\n                    if (helpCalendar.checkValidDate(val) && this.fConfigs.isTypeable) {\r\n                        this.ChooseDate(val);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        ready: function () {\r\n            window.addEventListener('resize', this.setCalendarStyles)\r\n        },\r\n        beforeDestroy: function () {\r\n            window.removeEventListener('resize', this.setCalendarStyles)\r\n        },\r\n        methods: {\r\n            initCalendar() {\r\n                // Set Help Calendar Configs\r\n                helpCalendar.configs.sundayStart = this.fConfigs.sundayStart;\r\n                helpCalendar.configs.leftAndRightDays = this.checkHiddenElement('leftAndRightDays');\r\n                helpCalendar.configs.dateFormat = this.fConfigs.dateFormat;\r\n                helpCalendar.configs.dayNames = this.fConfigs.dayNames;\r\n                helpCalendar.configs.monthNames = this.fConfigs.monthNames;\r\n\r\n                this.setCalendarData();\r\n                this.listRendering();\r\n                this.markChooseDays();\r\n                this.checkLimits(this.calendar.currentDate);\r\n            },\r\n            updateCalendar() {\r\n                this.setExistingCalendarData();\r\n                this.listRendering();\r\n                this.markChooseDays();\r\n            },\r\n            setCalendarData() {\r\n                let date = this.calendar.currentDate;\r\n                date = new Date(date.getFullYear(), date.getMonth() - 1);\r\n\r\n                this.listCalendars = [];\r\n\r\n                for (let i = 0; i < this.fConfigs.calendarsCount; i++) {\r\n                    date = new Date(date.getFullYear(), date.getMonth() + 1);\r\n\r\n                    let calendar = {\r\n                        key: i,\r\n                        date: date,\r\n                        dateTop: `${this.fConfigs.monthNames[date.getMonth()]} ${date.getFullYear()}`,\r\n                        month: this.fConfigs.monthNames[date.getMonth()],\r\n                        year: date.getFullYear(),\r\n                        weeks: helpCalendar.getFinalizedWeeks(date.getMonth(), date.getFullYear())\r\n                    };\r\n\r\n                    this.listCalendars.push(calendar);\r\n\r\n                    if (!this.fConfigs.isMultiple) {\r\n                        break;\r\n                    }\r\n                }\r\n            },\r\n            setExistingCalendarData() {\r\n                for (let i = 0; i < this.listCalendars.length; i++) {\r\n                    let calendar = this.listCalendars[i];\r\n                    let date = calendar.date;\r\n\r\n                    this.$set(this.listCalendars, i, {\r\n                        key: calendar.key,\r\n                        date: date,\r\n                        dateTop: `${this.fConfigs.monthNames[date.getMonth()]} ${date.getFullYear()}`,\r\n                        month: this.fConfigs.monthNames[date.getMonth()],\r\n                        year: date.getFullYear(),\r\n                        weeks: helpCalendar.getFinalizedWeeks(date.getMonth(), date.getFullYear())\r\n                    });\r\n\r\n                    if (!this.fConfigs.isMultiple) {\r\n                        break;\r\n                    }\r\n                }\r\n            },\r\n            setConfigs() {\r\n                let vm = this;\r\n                let globalOptions;\r\n                if (typeof vm.$getOptions !== \"undefined\") {\r\n                    // Global Options\r\n                    globalOptions = vm.$getOptions();\r\n                    Object.keys(globalOptions).map(function (objectKey) {\r\n                        if (typeof (vm.fConfigs[objectKey]) !== \"undefined\") {\r\n                            vm.$set(vm.fConfigs, objectKey, globalOptions[objectKey]);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (typeof (vm.configs) !== \"undefined\") {\r\n                    Object.keys(vm.fConfigs).map(function (objectKey) {\r\n                        if (typeof (vm.configs[objectKey]) !== \"undefined\") {\r\n                            // Get From Configs\r\n                            vm.$set(vm.fConfigs, objectKey, vm.configs[objectKey]);\r\n                        }\r\n                    });\r\n                } else {\r\n                    Object.keys(vm.$props).map(function (objectKey) {\r\n                        if (typeof (vm.fConfigs[objectKey]) !== \"undefined\" &&\r\n                            typeof (vm.$props[objectKey]) !== \"undefined\") {\r\n                            vm.$set(vm.fConfigs, objectKey, vm.$props[objectKey]);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                // Is Modal\r\n                if (vm.fConfigs.isModal) vm.showCalendar = false;\r\n\r\n                // Placeholder\r\n                if (!vm.fConfigs.placeholder) vm.fConfigs.placeholder = vm.fConfigs.dateFormat;\r\n\r\n                if (typeof vm.newCurrentDate !== \"undefined\") {\r\n                    vm.calendar.currentDate = vm.newCurrentDate;\r\n                }\r\n\r\n                // Sunday Start\r\n                if (vm.fConfigs.sundayStart) {\r\n                    let dayNames = vm.fConfigs.dayNames;\r\n                    let sundayName = dayNames[dayNames.length - 1];\r\n                    dayNames.splice(dayNames.length - 1, 1);\r\n                    dayNames.unshift(sundayName);\r\n                }\r\n            },\r\n            listRendering() {\r\n                let vm = this;\r\n\r\n                // Each Calendars\r\n                vm.listCalendars.forEach(function (calendar) {\r\n                    // Set Calendar Weeks\r\n                    calendar.weeks.forEach(function (week) {\r\n\r\n                        let finalizedDays = [];\r\n\r\n                        week.days.forEach(function (day) {\r\n                            let date = new Date(day.year, day.month, day.day);\r\n                            let now = new Date();\r\n\r\n                            let isToday = false;\r\n\r\n                            date.setHours(0, 0, 0, 0);\r\n                            now.setHours(0, 0, 0, 0);\r\n\r\n                            if (date.getTime() === now.getTime()) {\r\n                                isToday = true;\r\n                            }\r\n\r\n                            let checkMarked;\r\n                            // With Custom Classes\r\n                            if (typeof vm.fConfigs.markedDates[0] === \"object\") {\r\n                                checkMarked = vm.fConfigs.markedDates.find(function (markDate) {\r\n                                    return markDate.date === helpCalendar.formatDate(date)\r\n                                });\r\n                            } else {\r\n                                // Without Classes\r\n                                checkMarked = vm.fConfigs.markedDates.find(function (markDate) {\r\n                                    return markDate === helpCalendar.formatDate(date)\r\n                                });\r\n                            }\r\n\r\n                            if (vm.calendar.dateRange.start.date === helpCalendar.formatDate(date)) {\r\n                                checkMarked = true;\r\n                            }\r\n\r\n                            let isMarked = false;\r\n                            if (typeof checkMarked !== \"undefined\") {\r\n                                isMarked = true;\r\n                            }\r\n\r\n                            finalizedDays.push({\r\n                                day: day.day,\r\n                                date: helpCalendar.formatDate(date),\r\n                                hide: day.hide,\r\n                                isMouseToLeft: false,\r\n                                isMouseToRight: false,\r\n                                isHovered: false,\r\n                                isDateRangeStart: vm.checkDateRangeStart(helpCalendar.formatDate(date)),\r\n                                isDateRangeEnd: vm.checkDateRangeEnd(helpCalendar.formatDate(date)),\r\n                                hideLeftAndRightDays: day.hideLeftAndRightDays,\r\n                                isToday: isToday,\r\n                                isMarked: isMarked\r\n                            });\r\n                        });\r\n\r\n                        week.days = finalizedDays;\r\n                    });\r\n                });\r\n\r\n            },\r\n            clickDay(item) {\r\n                if (!this.fConfigs.isDateRange && !this.fConfigs.isDatePicker && !this.fConfigs.isMultipleDatePicker) {\r\n                    return false;\r\n                }\r\n\r\n                // Disable days of week if set in configuration\r\n                let dateDay = helpCalendar.getDateFromFormat(item.date).getDay() - 1;\r\n                if (dateDay === -1) {\r\n                    dateDay = 6;\r\n                }\r\n\r\n                let dayOfWeekString = this.fConfigs.dayNames[dateDay];\r\n                if (this.fConfigs.disabledDayNames.includes(dayOfWeekString)) {\r\n                    return false;\r\n                }\r\n\r\n                // Disabled dates\r\n                if (this.fConfigs.disabledDates.includes(item.date)) {\r\n                    return false;\r\n                }\r\n\r\n                // Limits\r\n                if (this.fConfigs.limits) {\r\n                    let min = helpCalendar.getDateFromFormat(this.fConfigs.limits.min).getTime();\r\n                    let max = helpCalendar.getDateFromFormat(this.fConfigs.limits.max).getTime();\r\n                    let date = helpCalendar.getDateFromFormat(item.date).getTime();\r\n\r\n                    if (date < min || date > max) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // Date Range\r\n                if (this.fConfigs.isDateRange) {\r\n\r\n                    let clickDate = helpCalendar.getDateFromFormat(item.date).getTime();\r\n\r\n                    let startDate = false;\r\n                    if (this.calendar.dateRange.start.date) {\r\n                        startDate = helpCalendar.getDateFromFormat(this.calendar.dateRange.start.date).getTime();\r\n                    }\r\n\r\n                    // Two dates is not empty\r\n                    if (this.calendar.dateRange.start.date !== false && this.calendar.dateRange.end.date !== false) {\r\n                        this.calendar.dateRange.start.date = item.date;\r\n                        this.calendar.dateRange.end.date = false;\r\n                        // Not date selected\r\n                    } else if (this.calendar.dateRange.start.date === false && this.calendar.dateRange.end.date === false) {\r\n                        this.calendar.dateRange.start.date = item.date;\r\n                        // Start Date not empty, chose date > start date\r\n                    } else if (this.calendar.dateRange.end.date === false && (clickDate > startDate)) {\r\n                        this.calendar.dateRange.end.date = item.date;\r\n                        // Start date not empty, chose date <= start date (also same date range select)\r\n                    } else if (this.calendar.dateRange.start.date !== false && (clickDate <= startDate)) {\r\n                        this.calendar.dateRange.end.date = this.calendar.dateRange.start.date;\r\n                        this.calendar.dateRange.start.date = item.date;\r\n                    }\r\n\r\n\r\n                    //Get number of days between date range dates\r\n                    if (this.calendar.dateRange.start.date !== false && this.calendar.dateRange.end.date !== false) {\r\n                        let oneDay = 24 * 60 * 60 * 1000;\r\n                        let firstDate = helpCalendar.getDateFromFormat(this.calendar.dateRange.start.date);\r\n                        let secondDate = helpCalendar.getDateFromFormat(this.calendar.dateRange.end.date);\r\n                        let diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));\r\n\r\n                        this.$emit('selectedDaysCount', diffDays);\r\n\r\n                        // Is Auto Closeable\r\n                        if (this.fConfigs.isModal && this.fConfigs.isAutoCloseable) {\r\n                            this.showCalendar = false;\r\n                        }\r\n                    }\r\n\r\n                    this.$emit('input', this.calendar);\r\n                } else if (this.fConfigs.isDatePicker) {\r\n                    this.calendar.selectedDate = item.date;\r\n                    this.$emit('input', this.calendar);\r\n\r\n                    // Is Auto Closeable\r\n                    if (this.fConfigs.isModal && this.fConfigs.isAutoCloseable) {\r\n                        this.showCalendar = false;\r\n                    }\r\n                } else if (this.fConfigs.isMultipleDatePicker) {\r\n                    if (this.calendar.selectedDates.find(date => date.date === item.date)) {\r\n                        let dateIndex = this.calendar.selectedDates.findIndex(date => date.date === item.date);\r\n                        this.calendar.selectedDates.splice(dateIndex, 1);\r\n                    } else {\r\n                        let date = Object.assign({}, this.defaultDateFormat);\r\n                        date.date = item.date;\r\n                        this.calendar.selectedDates.push(date);\r\n                    }\r\n\r\n                    this.$emit('input', this.calendar);\r\n                }\r\n\r\n                this.markChooseDays();\r\n\r\n                // Time Picker\r\n                if (this.fConfigs.withTimePicker) {\r\n                    if (this.fConfigs.isDateRange || this.fConfigs.isDatePicker) {\r\n                        this.openTimePicker();\r\n                    }\r\n\r\n                    if (this.calendar.selectedDates.find(date => date.date === item.date) && this.fConfigs.isMultipleDatePicker) {\r\n                        this.openTimePicker();\r\n                    }\r\n                }\r\n\r\n                this.$emit('choseDay', item);\r\n            },\r\n            markChooseDays() {\r\n                let vm = this;\r\n                let startDate = vm.calendar.dateRange.start.date;\r\n                let endDate = vm.calendar.dateRange.end.date;\r\n\r\n                this.listCalendars.forEach((calendar) => {\r\n                    calendar.weeks.forEach((week) => {\r\n                        week.days.forEach((day) => {\r\n\r\n                            day.isMarked = false;\r\n\r\n                            // Date Picker\r\n                            if (vm.fConfigs.isDatePicker) {\r\n                                if (this.calendar.selectedDate === day.date)\r\n                                    day.isMarked = true;\r\n                            } else if (vm.fConfigs.isMultipleDatePicker) {\r\n                                if (vm.calendar.selectedDates.find(date => date.date === day.date))\r\n                                    day.isMarked = true;\r\n                            } else {\r\n                                day.isMouseToLeft = false;\r\n                                day.isMouseToRight = false;\r\n\r\n                                // Date Range\r\n                                if (startDate === day.date) {\r\n                                    day.isMouseToLeft = !!endDate;\r\n                                    day.isMarked = true;\r\n                                }\r\n\r\n                                if (endDate === day.date) {\r\n                                    day.isMouseToRight = !!endDate;\r\n                                    day.isMarked = true;\r\n                                }\r\n\r\n                                if (startDate && startDate === endDate) {\r\n                                    day.isMouseToLeft = false\r\n                                    day.isMouseToRight = false\r\n                                }\r\n\r\n                                if (startDate && endDate) {\r\n                                    if (helpCalendar.getDateFromFormat(day.date).getTime() > helpCalendar.getDateFromFormat(startDate)\r\n                                        && helpCalendar.getDateFromFormat(day.date) < helpCalendar.getDateFromFormat(endDate)) {\r\n                                        day.isMarked = true;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (this.fConfigs.markedDates.includes(day.date))\r\n                                day.isMarked = true;\r\n                        })\r\n                    })\r\n                })\r\n            },\r\n            dayMouseOver(week_key, date) {\r\n                if (!this.fConfigs.isDateRange) {\r\n                    return false;\r\n                }\r\n\r\n                // Limits\r\n                if (this.fConfigs.limits) {\r\n                    let limitMin = helpCalendar.getDateFromFormat(this.fConfigs.limits.min).getTime();\r\n                    let limitMax = helpCalendar.getDateFromFormat(this.fConfigs.limits.max).getTime();\r\n                    let limitDate = helpCalendar.getDateFromFormat(date).getTime();\r\n\r\n                    if (limitDate < limitMin || limitDate > limitMax) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if ((this.calendar.dateRange.start.date === false || this.calendar.dateRange.end.date === false)\r\n                    && (this.calendar.dateRange.start.date !== false || this.calendar.dateRange.end.date !== false)) {\r\n\r\n                    for (let e = 0; e < this.listCalendars.length; e++) {\r\n                        let calendar = this.listCalendars[e];\r\n\r\n                        for (let f = 0; f < calendar.weeks.length; f++) {\r\n                            let week = calendar.weeks[f];\r\n\r\n                            for (let i = 0; i < week.days.length; i++) {\r\n\r\n                                let item = week.days[i];\r\n\r\n                                this.listCalendars[e].weeks[f].days[i].isHovered = false;\r\n\r\n                                if (item.date !== this.calendar.dateRange.start.date && !this.fConfigs.markedDates.includes(item.date)) {\r\n                                    this.listCalendars[e].weeks[f].days[i].isMarked = false;\r\n                                }\r\n\r\n                                if (this.calendar.dateRange.start.date) {\r\n                                    let itemDate = helpCalendar.getDateFromFormat(item.date).getTime();\r\n                                    let thisDate = helpCalendar.getDateFromFormat(date).getTime();\r\n                                    let startDate = helpCalendar.getDateFromFormat(this.calendar.dateRange.start.date).getTime();\r\n\r\n                                    this.listCalendars[e].weeks[f].days[i].isMouseToLeft = (itemDate === startDate && thisDate > startDate) || (itemDate === thisDate && thisDate < startDate);\r\n                                    this.listCalendars[e].weeks[f].days[i].isMouseToRight = (itemDate === startDate && thisDate < startDate) || (itemDate === thisDate && thisDate > startDate);\r\n\r\n                                    let dateDay = helpCalendar.getDateFromFormat(item.date).getDay() - 1;\r\n                                    if (dateDay === -1) {\r\n                                        dateDay = 6;\r\n                                    }\r\n\r\n                                    let dayOfWeekString = this.fConfigs.dayNames[dateDay];\r\n                                    if (!this.fConfigs.disabledDayNames.includes(dayOfWeekString) &&\r\n                                        ((itemDate > startDate && itemDate < thisDate)\r\n                                            ||\r\n                                            (itemDate < startDate && itemDate > thisDate))\r\n                                    ) {\r\n                                        this.listCalendars[e].weeks[f].days[i].isMarked = true;\r\n                                    }\r\n\r\n                                    if (!this.calendar.dateRange.end.date && itemDate === thisDate) {\r\n                                        this.listCalendars[e].weeks[f].days[i].isHovered = true;\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            /**\r\n             * @return {boolean}\r\n             */\r\n            PreMonth(calendarKey = null) {\r\n                if (!this.allowPreDate)\r\n                    return false;\r\n\r\n                this.transitionPrefix = 'right';\r\n\r\n                if (calendarKey !== null) {\r\n                    let currentCalendar = this.listCalendars[calendarKey];\r\n                    currentCalendar.date = new Date(currentCalendar.date.getFullYear(), currentCalendar.date.getMonth() - 1);\r\n                    currentCalendar.key -= 1;\r\n                    this.updateCalendar();\r\n                } else {\r\n                    this.calendarsKey -= 1;\r\n                    this.calendar.currentDate = new Date(this.calendar.currentDate.getFullYear(), this.calendar.currentDate.getMonth() - 1);\r\n                    this.initCalendar();\r\n                }\r\n\r\n                this.$emit('changedMonth', this.calendar.currentDate);\r\n            },\r\n            /**\r\n             * @return {boolean}\r\n             */\r\n            NextMonth(calendarKey = null) {\r\n                if (!this.allowNextDate)\r\n                    return false;\r\n\r\n                this.transitionPrefix = 'left';\r\n\r\n                if (calendarKey !== null) {\r\n                    let currentCalendar = this.listCalendars[calendarKey];\r\n                    currentCalendar.date = new Date(currentCalendar.date.getFullYear(), currentCalendar.date.getMonth() + 1);\r\n                    currentCalendar.key += 1;\r\n                    this.updateCalendar();\r\n                } else {\r\n                    this.calendarsKey += 1;\r\n                    this.calendar.currentDate = new Date(this.calendar.currentDate.getFullYear(), this.calendar.currentDate.getMonth() + 1);\r\n                    this.initCalendar();\r\n                }\r\n\r\n                this.$emit('changedMonth', this.calendar.currentDate);\r\n            },\r\n            /**\r\n             * @return {boolean}\r\n             */\r\n            PreYear(calendarKey = null) {\r\n                if (!this.allowPreDate)\r\n                    return false;\r\n\r\n                let step = this.showYearPicker ? this.fConfigs.changeYearStep : 1;\r\n\r\n                if (calendarKey !== null) {\r\n                    let currentCalendar = this.listCalendars[calendarKey];\r\n                    currentCalendar.date = new Date(currentCalendar.date.getFullYear() - step, currentCalendar.date.getMonth());\r\n                    this.updateCalendar();\r\n                    this.$emit('changedYear', currentCalendar.date);\r\n                } else {\r\n                    this.calendar.currentDate = new Date(this.calendar.currentDate.getFullYear() - step, this.calendar.currentDate.getMonth());\r\n                    this.initCalendar();\r\n                    this.$emit('changedYear', this.calendar.currentDate);\r\n                }\r\n            },\r\n            /**\r\n             * @return {boolean}\r\n             */\r\n            NextYear(calendarKey = null) {\r\n                if (!this.allowNextDate)\r\n                    return false;\r\n\r\n                let step = this.showYearPicker ? this.fConfigs.changeYearStep : 1;\r\n\r\n                if (calendarKey !== null) {\r\n                    let currentCalendar = this.listCalendars[calendarKey];\r\n                    currentCalendar.date = new Date(currentCalendar.date.getFullYear() + step, currentCalendar.date.getMonth());\r\n                    this.updateCalendar();\r\n                    this.$emit('changedYear', currentCalendar.date);\r\n                } else {\r\n                    this.calendar.currentDate = new Date(this.calendar.currentDate.getFullYear() + step, this.calendar.currentDate.getMonth());\r\n                    this.initCalendar();\r\n                    this.$emit('changedYear', this.calendar.currentDate);\r\n                }\r\n            },\r\n            ChooseDate(date) {\r\n                let newDate = helpCalendar.getDateFromFormat(date);\r\n\r\n                if (date === 'today') {\r\n                    newDate = new Date();\r\n                }\r\n\r\n                this.calendar.currentDate = newDate;\r\n                this.initCalendar();\r\n            },\r\n            openMonthPicker(key) {\r\n                if (this.fConfigs.changeMonthFunction) {\r\n                    this.showMonthPicker = (key === this.showMonthPicker) ? false : key;\r\n                    this.showYearPicker = false;\r\n                }\r\n            },\r\n            openYearPicker(key) {\r\n                if (this.fConfigs.changeYearFunction) {\r\n                    this.showYearPicker = (key === this.showYearPicker) ? false : key;\r\n                    this.showMonthPicker = false;\r\n                }\r\n            },\r\n            openTimePicker() {\r\n                this.showTimePicker = true;\r\n            },\r\n            pickMonth(calendarKey = null, key) {\r\n                this.showMonthPicker = false;\r\n\r\n                if (calendarKey !== null) {\r\n                    let currentCalendar = this.listCalendars[calendarKey];\r\n                    let date = currentCalendar.date;\r\n                    currentCalendar.date = new Date(date.getFullYear(), key + 1, 0);\r\n                    this.updateCalendar();\r\n                } else {\r\n                    let date = this.calendar.currentDate;\r\n                    this.calendar.currentDate = new Date(date.getFullYear(), key + 1, 0);\r\n                    this.initCalendar();\r\n                }\r\n\r\n            },\r\n            pickYear(calendarKey = null, year) {\r\n                this.showYearPicker = false;\r\n\r\n                if (calendarKey !== null) {\r\n                    let currentCalendar = this.listCalendars[calendarKey];\r\n                    let date = currentCalendar.date;\r\n                    currentCalendar.date = new Date(year, date.getMonth() + 1, 0);\r\n                    this.updateCalendar();\r\n                } else {\r\n                    let date = this.calendar.currentDate;\r\n                    this.calendar.currentDate = new Date(year, date.getMonth() + 1, 0);\r\n                    this.initCalendar();\r\n                }\r\n            },\r\n            getClassNames(day) {\r\n                let classes = [];\r\n\r\n                // Disable days of week if set in configuration\r\n                let dateDay = helpCalendar.getDateFromFormat(day.date).getDay() - 1;\r\n                if (dateDay === -1) {\r\n                    dateDay = 6;\r\n                }\r\n                let dayOfWeekString = this.fConfigs.dayNames[dateDay];\r\n                if (this.fConfigs.disabledDayNames.includes(dayOfWeekString)) {\r\n                    day.hide = true;\r\n                    classes.push('vfc-cursor-not-allowed');\r\n                }\r\n\r\n                let date = helpCalendar.getDateFromFormat(day.date);\r\n                let today = new Date();\r\n                today.setHours(0, 0, 0, 0);\r\n\r\n\r\n                // Disabled dates\r\n                if (this.fConfigs.disabledDates.includes(day.date) ||\r\n                    (this.fConfigs.disabledDates.includes('beforeToday') && date.getTime() < today.getTime()) ||\r\n                    (this.fConfigs.disabledDates.includes('afterToday') && date.getTime() > today.getTime())\r\n                ) {\r\n                    classes.push('vfc-disabled');\r\n                    classes.push('vfc-cursor-not-allowed');\r\n                }\r\n\r\n                if (this.fConfigs.limits) {\r\n                    let min = helpCalendar.getDateFromFormat(this.fConfigs.limits.min).getTime();\r\n                    let max = helpCalendar.getDateFromFormat(this.fConfigs.limits.max).getTime();\r\n\r\n                    if (date.getTime() < min || date.getTime() > max) {\r\n                        classes.push('vfc-disabled');\r\n                        classes.push('vfc-cursor-not-allowed');\r\n                    }\r\n                }\r\n\r\n                if (day.hide) {\r\n                    classes.push('vfc-hide');\r\n                }\r\n\r\n                // Today date\r\n                if (day.isToday) {\r\n                    classes.push('vfc-today');\r\n                }\r\n\r\n                if (!day.hideLeftAndRightDays && !this.fConfigs.disabledDayNames.includes(dayOfWeekString)) {\r\n\r\n                    // Mark Date\r\n                    if (day.isMarked) {\r\n                        classes.push('vfc-marked');\r\n                    } else if (day.isHovered) {\r\n                        classes.push('vfc-hovered');\r\n                    }\r\n\r\n                    if (this.fConfigs.markedDates.includes(day.date)) {\r\n                        classes.push('vfc-borderd');\r\n                    }\r\n\r\n                    // Date Range Marked\r\n                    if (this.fConfigs.markedDateRange.start && this.fConfigs.markedDateRange.end) {\r\n                        if (helpCalendar.getDateFromFormat(this.fConfigs.markedDateRange.start) <= helpCalendar.getDateFromFormat(day.date)\r\n                            && helpCalendar.getDateFromFormat(this.fConfigs.markedDateRange.end) >= helpCalendar.getDateFromFormat(day.date)) {\r\n                            classes.push('vfc-marked');\r\n                        }\r\n\r\n                        if (day.date === this.fConfigs.markedDateRange.start) {\r\n                            classes.push('vfc-start-marked');\r\n                        } else if (day.date === this.fConfigs.markedDateRange.end) {\r\n                            classes.push('vfc-end-marked');\r\n                        }\r\n                    } else {\r\n\r\n                        // Only After Start Marked\r\n                        if (this.fConfigs.markedDateRange.start) {\r\n                            if (helpCalendar.getDateFromFormat(this.fConfigs.markedDateRange.start) <= helpCalendar.getDateFromFormat(day.date))\r\n                                classes.push('vfc-marked');\r\n                        }\r\n\r\n                        // Only Before End Marked\r\n                        if (this.fConfigs.markedDateRange.end) {\r\n                            if (helpCalendar.getDateFromFormat(this.fConfigs.markedDateRange.end) >= helpCalendar.getDateFromFormat(day.date))\r\n                                classes.push('vfc-marked');\r\n                        }\r\n                    }\r\n\r\n                    classes.push('vfc-hover');\r\n                }\r\n\r\n\r\n                // Date Mark With Custom Classes\r\n                if (typeof this.fConfigs.markedDates === \"object\") {\r\n                    let checkMarked = this.fConfigs.markedDates.find(function (markDate) {\r\n                        return markDate.date === day.date;\r\n                    });\r\n\r\n                    if (typeof checkMarked !== \"undefined\") {\r\n                        classes.push(checkMarked.class);\r\n                    }\r\n                }\r\n\r\n                if (day.date === this.calendar.dateRange.start.date) {\r\n                    classes.push('vfc-start-marked');\r\n                }\r\n\r\n                if (day.date === this.calendar.dateRange.end.date) {\r\n                    classes.push('vfc-end-marked');\r\n                }\r\n\r\n                if (day.date === this.calendar.selectedDate || this.calendar.selectedDates.find(date => date.date === day.date)) {\r\n                    classes.push('vfc-borderd')\r\n                }\r\n\r\n                return classes;\r\n            },\r\n            checkDateRangeStart(date) {\r\n                return date === this.fConfigs.markedDateRange.start;\r\n            },\r\n            checkDateRangeEnd(date) {\r\n                return date === this.fConfigs.markedDateRange.end;\r\n            },\r\n            checkLimits(value) {\r\n                if (this.fConfigs.limits) {\r\n                    let min = new Date(helpCalendar.getDateFromFormat(this.fConfigs.limits.min));\r\n                    min.setDate(1);\r\n                    min.setHours(0, 0, 0, 0);\r\n                    let max = new Date(helpCalendar.getDateFromFormat(this.fConfigs.limits.max));\r\n                    max.setDate(1);\r\n                    max.setHours(0, 0, 0, 0);\r\n\r\n                    this.allowPreDate = true;\r\n                    this.allowNextDate = true;\r\n\r\n                    let current = new Date(value);\r\n                    current.setDate(1);\r\n                    current.setHours(0, 0, 0, 0);\r\n\r\n                    if (current <= min) {\r\n                        this.allowPreDate = false;\r\n                    }\r\n\r\n                    if (current >= max) {\r\n                        this.allowNextDate = false;\r\n                    }\r\n                }\r\n            },\r\n            getTransition_() {\r\n                if (!this.fConfigs.transition)\r\n                    return '';\r\n\r\n                let name = '';\r\n                if (this.transitionPrefix === 'left') {\r\n                    name = 'vfc-calendar-slide-left';\r\n                } else if (this.transitionPrefix === 'right') {\r\n                    name = 'vfc-calendar-slide-right';\r\n                }\r\n                return name;\r\n            },\r\n            setCalendarStyles() {\r\n                let day = this.$refs.day[0];\r\n                let container = this.$refs.mainContainer;\r\n\r\n                container.style.display = \"\";\r\n                let height = container.clientHeight + (day.clientHeight + (day.clientHeight / 2.5));\r\n                container.style.height = height + \"px\";\r\n\r\n                if (this.fConfigs.isModal) {\r\n                    container.style.display = \"none\"\r\n                }\r\n            },\r\n            checkHiddenElement(elementName) {\r\n                return !this.fConfigs.hiddenElements.includes(elementName);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .vfc-styles-conditional-class {\r\n        @import \"../assets/scss/calendar.scss\";\r\n    }\r\n</style>\r\n"]}]}