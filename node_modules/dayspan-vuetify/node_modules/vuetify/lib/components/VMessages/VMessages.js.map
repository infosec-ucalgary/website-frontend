{"version":3,"sources":["../../../src/components/VMessages/VMessages.ts"],"names":[],"mappings":";AACA,OAAO,+CAAP;AAEA;AACA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,SAAP,MAAsB,wBAAtB;AAKA,OAAO,MAAP,MAAmB,mBAAnB;AAEA;AACA,SAAS,UAAT,QAA2B,oBAA3B;AAEA;AACA,eAAe,OAAO,SAAP,EAAkB,SAAlB,EAA6B,MAA7B,CAAoC;AACjD,UAAM,YAD2C;AAGjD,WAAO;AACL,eAAO;AACL,kBAAM,KADD;AAEL,qBAAS;AAAA,uBAAO,EAAP;AAAA;AAFJ;AADF,KAH0C;AAUjD,aAAS;AACP,mBADO,yBACI;AACT,mBAAO,KAAK,cAAL,CAAoB,kBAApB,EAAwC;AAC7C,6BAAa,qBADgC;AAE7C,uBAAO;AACL,0BAAM,oBADD;AAEL,yBAAK;AAFA;AAFsC,aAAxC,EAMJ,KAAK,KAAL,CAAW,GAAX,CAAe,KAAK,UAApB,CANI,CAAP;AAOD,SATM;AAUP,kBAVO,sBAUK,OAVL,EAUsB,GAVtB,EAUiC;AACtC,gBAAM,OAAO,KAAK,YAAL,CAAkB,OAAlB,GACT,KAAK,YAAL,CAAkB,OAAlB,CAA0B,EAAE,gBAAF,EAAW,QAAX,EAA1B,CADS,GAET,SAFJ;AAGA,gBAAM,cAAc,WAAW,OAAX,CAApB;AACA,gBAAM,YAAY,CAAC,IAAD,GAAQ,WAAR,GAAsB,SAAxC;AAEA,mBAAO,KAAK,cAAL,CAAoB,KAApB,EAA2B;AAChC,6BAAa,qBADmB;AAEhC,wBAFgC;AAGhC,0BAAU,EAAE,oBAAF;AAHsB,aAA3B,EAIJ,IAJI,CAAP;AAKD;AAtBM,KAVwC;AAmCjD,UAnCiD,kBAmCzC,CAnCyC,EAmCxC;AACP,eAAO,EAAE,KAAF,EAAS,KAAK,YAAL,CAAkB,KAAK,KAAvB,EAA8B;AAC5C,yBAAa,YAD+B;AAE5C,mBAAO,KAAK;AAFgC,SAA9B,CAAT,EAGH,CAAC,KAAK,WAAL,EAAD,CAHG,CAAP;AAID;AAxCgD,CAApC,CAAf","sourcesContent":["// Styles\nimport '../../stylus/components/_messages.styl'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport mixins from '../../util/mixins'\n\n// Utilities\nimport { escapeHTML } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-messages',\n\n  props: {\n    value: {\n      type: Array,\n      default: () => ([])\n    } as PropValidator<string[]>\n  },\n\n  methods: {\n    genChildren () {\n      return this.$createElement('transition-group', {\n        staticClass: 'v-messages__wrapper',\n        attrs: {\n          name: 'message-transition',\n          tag: 'div'\n        }\n      }, this.value.map(this.genMessage))\n    },\n    genMessage (message: string, key: number) {\n      const slot = this.$scopedSlots.default\n        ? this.$scopedSlots.default({ message, key })\n        : undefined\n      const escapedHTML = escapeHTML(message)\n      const innerHTML = !slot ? escapedHTML : undefined\n\n      return this.$createElement('div', {\n        staticClass: 'v-messages__message',\n        key,\n        domProps: { innerHTML }\n      }, slot)\n    }\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-messages',\n      class: this.themeClasses\n    }), [this.genChildren()])\n  }\n})\n"],"sourceRoot":""}